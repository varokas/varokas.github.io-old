<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Testing on My New Hugo Site</title>
    <link>http://yourSiteHere/tags/testing/</link>
    <description>Recent content in Testing on My New Hugo Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 28 Jun 2014 22:43:23 +0000</lastBuildDate>
    <atom:link href="http://yourSiteHere/tags/testing/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Async Testing บน JavaScript</title>
      <link>http://yoursitehere/post/async-testing-e0b89ae0b899-javascript/</link>
      <pubDate>Sat, 28 Jun 2014 22:43:23 +0000</pubDate>
      
      <guid>http://yoursitehere/post/async-testing-e0b89ae0b899-javascript/</guid>
      <description>&lt;p&gt;ใช้ Asynchronous โค้ดมักจะเทสได้ยาก เพราะเราไม่รู้ว่ามันจะไปจบลงเมื่อไหร่ เพราะเวลาเราเรียกฟังก์ชัน async เสร็จมันก็จะไปอยู่ในโลกของมันเอง ไม่กลับมาอีก&lt;/p&gt;

&lt;p&gt;&amp;lt;!&amp;ndash; more &amp;ndash;&amp;gt;ซึ่งเทคนิคในการแก้ไขแบบนี้น่าจะมีได้หลายแบบ อย่างนึงที่คิดออกและเคยทำคือ ต้องให้ async code มันไปเขียนค่าใน shared variable ซักตัวนึง แล้วก็ให้เทสมันเช็คหลังจากรอไปซักพักนึง&lt;/p&gt;

&lt;p&gt;แต่สำหรับ JavaScript ถ้าใครใช้ jasmine เป็นเฟรมเวิร์คในการเทส จะมีวิธีจัดการง่ายๆ แบบนี้&lt;/p&gt;

&lt;p&gt;[code lang=&amp;ldquo;js&amp;rdquo;]
it(&amp;ldquo;async spec must use done callback&amp;rdquo;, function(done) {
  setTimeout(function() {
    done();
  }
  ,50);
});
[/code]&lt;/p&gt;

&lt;p&gt;ลองสังเกตว่าถ้าเราเขียนเทสปกติ function ที่อยู่ใน it(..) จะไม่รับ parameter อะไร แต่ถ้าเป็นแบบ async ก็จะมีการประกาศตัวแปรขึ้นมา 1 ตัว (ไม่ให้งงแนะนำว่าให้ใช้ชื่อว่า done) ซึ่งถ้าประกาศแบบนี้แล้ว jasmine ก็จะรู้เองว่าเราอยากใช้แบบ async ซึ่งจะผ่านเมื่อในโค้ดเรามีการเรียก done ก่อนเวลา timeout (ค่า default คือ 5 วินาที เปลี่ยนได้)&lt;/p&gt;

&lt;p&gt;ลองไปรันโค้ดได้จากที่นี่ : [&lt;a href=&#34;https://github.com/varokas/kata-js&#34;&gt;https://github.com/varokas/kata-js&lt;/a&gt;]&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>