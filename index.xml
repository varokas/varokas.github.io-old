<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Minimal Engineering</title>
    <link>http://www.varokas.com/</link>
    <description>Recent content on Minimal Engineering</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 19 May 2015 23:08:36 -0700</lastBuildDate>
    <atom:link href="http://www.varokas.com/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Cloud Data Architecture and CAP Theorem</title>
      <link>http://www.varokas.com/post/2015-05-19-CAP-Theorem-and-cloud-architecture/</link>
      <pubDate>Tue, 19 May 2015 23:08:36 -0700</pubDate>
      
      <guid>http://www.varokas.com/post/2015-05-19-CAP-Theorem-and-cloud-architecture/</guid>
      <description>

&lt;p&gt;I always think of Software architecture as making an energy transfer. When we are designing to gain something, we lose something else in the process. Nothing shows this better than the &lt;a href=&#34;http://en.wikipedia.org/wiki/CAP_theorem&#34;&gt;CAP Theorem&lt;/a&gt;, which has recently been quite popular criteria for selecting NoSQL databases for storage in the cloud.&lt;/p&gt;

&lt;h2 id=&#34;cap-theorem:eb906a23ad1d499d07c5694028901073&#34;&gt;CAP Theorem&lt;/h2&gt;

&lt;p&gt;It states that all distributed system can provide &lt;em&gt;only&lt;/em&gt; two of these three properties.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Consistency&lt;/strong&gt; All nodes see the same thing&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Availability&lt;/strong&gt; When we ask the system, It readily answers&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Partition Tolerance&lt;/strong&gt; When parts of the system fails, it can still operates&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s try that with data storage system.&lt;/p&gt;

&lt;h2 id=&#34;c-and-a:eb906a23ad1d499d07c5694028901073&#34;&gt;C and A&lt;/h2&gt;

&lt;p&gt;Example: Traditional SQL Database&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.varokas.com/images/2015/database.png&#34; alt=&#34;&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;[C] Easiest way to make sure our data is consistent? Put it all in one giant centralized bucket.&lt;/p&gt;

&lt;p&gt;[A] No wonder why we call it &amp;ldquo;database&amp;rdquo;. It&amp;rsquo;s a base for all our data! This implies availability in a sense that our only node are always in contact with the client.&lt;/p&gt;

&lt;p&gt;[P] One server to do it all is well and good until we have a problem at that only node and we&amp;rsquo;ll lose a few hours while we bring up the node again.&lt;/p&gt;

&lt;h2 id=&#34;a-and-p:eb906a23ad1d499d07c5694028901073&#34;&gt;A and P&lt;/h2&gt;

&lt;p&gt;Example: Cassandra&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.varokas.com/images/2015/ap.png&#34; alt=&#34;&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;It&amp;rsquo;s easy to spot an AP system. Look for &amp;ldquo;Eventually Consistent&amp;rdquo; in the documentation. Cassandra default operation is to write to one node. The data will later be replicated to other nodes in the background.&lt;/p&gt;

&lt;p&gt;[C] If a client reads from any available node. The client can, undesirably, read before replication finishes. What is read might not be up to date.&lt;/p&gt;

&lt;p&gt;[A] Nothing is stopping us from reading data from any nodes at any time. So the data is highly available to the client.&lt;/p&gt;

&lt;p&gt;[P] is great here because one of replicated nodes can be taken away and others can readily step in place.&lt;/p&gt;

&lt;h2 id=&#34;c-and-p:eb906a23ad1d499d07c5694028901073&#34;&gt;C and P&lt;/h2&gt;

&lt;p&gt;Example: HBase&lt;/p&gt;

&lt;p&gt;By default HBase make sure all writes are acknowledged first before sending ok back to the client.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.varokas.com/images/2015/cp.png&#34; alt=&#34;&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;[C] After the system give the client an &amp;ldquo;okay&amp;rdquo;. It means the read will be consistent as all node are acknowledged of that same data.&lt;/p&gt;

&lt;p&gt;[A] Not that great. The client cannot proceed with that node until the data is acknowledged.&lt;/p&gt;

&lt;p&gt;[P] The nodes that are down can also taken over by other nodes.&lt;/p&gt;

&lt;h2 id=&#34;look-for-what-is-missing:eb906a23ad1d499d07c5694028901073&#34;&gt;Look for what is missing&lt;/h2&gt;

&lt;p&gt;When designing a distributed system or storage, keep CAP theorem in mind. It will help us be aware of what is being sacrificed while pursuing other qualities. It is natural for our architecture to have a drawback. We just need to make sure it is intentional, not accidental.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>About Me</title>
      <link>http://www.varokas.com/about/</link>
      <pubDate>Sat, 02 May 2015 00:00:00 +0000</pubDate>
      
      <guid>http://www.varokas.com/about/</guid>
      <description>

&lt;p&gt;A code craftsman and Agile enthusiast based in California. Varokas currently works at Apple and previously at ADP.&lt;/p&gt;

&lt;p&gt;After a master degree in Software Engineering from Carnegie Mellon University, Varokas worked with teams on Agile adoption. Pushing from monthly to weekly releases, growing from small co-located to global scale.&lt;/p&gt;

&lt;p&gt;Varokas is an international speaker on Enterprise Agile and Continuous Delivery. He initiated the first national Thailand Agile conference series with &lt;a href=&#34;http://www.facebook.com/groups/agile66&#34;&gt;Agile66&lt;/a&gt; group started from 2012, continuing till today.&lt;/p&gt;

&lt;p&gt;Besides maintaining a &lt;a href=&#34;http://www.varokas.com/&#34;&gt;blog&lt;/a&gt; in software engineering, Varokas enjoys &lt;a href=&#34;https://soundcloud.com/varokas&#34;&gt;improvised piano playing&lt;/a&gt;, &lt;a href=&#34;https://www.facebook.com/varokas/media_set?set=a.10151285672213690.525415.709838689&amp;amp;type=3&#34;&gt;creative cooking&lt;/a&gt; and hiking.&lt;/p&gt;

&lt;h2 id=&#34;projects:6083a88ee3411b0d17ce02d738f69d47&#34;&gt;Projects&lt;/h2&gt;

&lt;p&gt;The best way to learn is by creating a safe environment to play, jumping into it, look at your mistakes and think about how to do better next time. These are community projects I initiated with software practitioners in Thailand on applications of Agile.&lt;/p&gt;

&lt;h3 id=&#34;agile-thailand-agile-tour-bangkok-conferences:6083a88ee3411b0d17ce02d738f69d47&#34;&gt;Agile Thailand &amp;amp; Agile Tour Bangkok Conferences&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;http://www.varokas.com/images/2014/06/ath2013.jpg&#34; alt=&#34;ATH&#34; /&gt;
I helped initiate and facilitate Thailand&amp;rsquo;s first and only national Agile conference series. All events are organized with Agile process and regular retrospective. Staff learned Agile planning, tracking and retrospective through organizing these events.&lt;/p&gt;

&lt;h3 id=&#34;scrum-primer-translation:6083a88ee3411b0d17ce02d738f69d47&#34;&gt;Scrum Primer Translation&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;http://www.varokas.com/images/scrum_primer.png&#34; alt=&#34;Scrum Primer&#34; /&gt;
I helped an online team of five learned Scrum by translating the first version of &lt;a href=&#34;http://www.scrumprimer.org/home&#34;&gt;Scrum Primer&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Presentation at Agile Tour Bangkok 2012 [&lt;a href=&#34;http://www.youtube.com/watch?v=LXRoZ6d_sSw&#34;&gt;link&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;Meeting Recordings [&lt;a href=&#34;http://www.youtube.com/watch?v=wvaZv4BRWTc&amp;amp;list=PL0BB86F3A56D2CCF7&#34;&gt;link&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;Sprints on Trello [&lt;a href=&#34;https://trello.com/b/rvKW0xo1/scrum-primer-translation&#34;&gt;link&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;Download [&lt;a href=&#34;http://www.varokas.com/wp-content/uploads/2014/06/ScrumPrimerThaiTranslation_v08.pdf&#34;&gt;link&lt;/a&gt;]&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;huskycode:6083a88ee3411b0d17ce02d738f69d47&#34;&gt;HuskyCode&lt;/h2&gt;

&lt;p&gt;&amp;ldquo;Practice Agile methods in safe environments via online projects that help software community.&amp;rdquo; During the time HuskyCode was founded, there were unbelievably low number of Agile adoptions in Thailand and a place to safely practice these skills is non-existent. So I founded HuskyCode for all Agile enthusiast to meet and develop their skills in working together as a team. How to slice and negotiate the stories with product owners. How to deliver value incrementally to an online community project. These are the projects developed under HuskyCode.&lt;/p&gt;

&lt;h5 id=&#34;foresee:6083a88ee3411b0d17ce02d738f69d47&#34;&gt;Foresee&lt;/h5&gt;

&lt;p&gt;&lt;img src=&#34;http://www.varokas.com/images/2014/06/foresee.png&#34; alt=&#34;Foresee&#34; /&gt;
  Online planning poker tool. Practice TDD and Continuous Delivery on AngularJS and NodeJS based project&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Presentation at Agile Thailand 2013 [&lt;a href=&#34;http://www.seacademy.in.th/video/real-agile-huskycode-foresee&#34;&gt;link&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;Dev Group [&lt;a href=&#34;https://www.facebook.com/groups/foreseedev&#34;&gt;link&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;Sources [&lt;a href=&#34;https://github.com/huskycode/foresee&#34;&gt;link&lt;/a&gt;]&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&#34;thailand-se-academy:6083a88ee3411b0d17ce02d738f69d47&#34;&gt;Thailand SE Academy&lt;/h5&gt;

&lt;p&gt;&lt;img src=&#34;http://www.varokas.com/images/2014/06/seacademy.png&#34; alt=&#34;SE Academy&#34; /&gt;
&lt;span style=&#34;color: #444444;&#34;&gt;Second project for hands-on continuous delivery&lt;/span&gt;. Creating a website aim to collect Thailand&amp;rsquo;s SE materials in one place. Practice Continuous Delivery, Automated Infrastructure and TDD&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The Website [&lt;a href=&#34;http://www.seacademy.in.th&#34;&gt;link&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;The UAT Website [&lt;a href=&#34;http://uat.seacademy.in.th&#34;&gt;link&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;Presentation at Agile Tour Bangkok 2013 [link]&lt;/li&gt;
&lt;li&gt;One of planning meeting session [&lt;a href=&#34;https://www.youtube.com/watch?v=9rcSvcj1Cck&#34;&gt;link&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;Dev Group [&lt;a href=&#34;https://github.com/huskycode/thsea&#34;&gt;link&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;Sources [&lt;a href=&#34;https://www.facebook.com/groups/thseacademy/&#34;&gt;link&lt;/a&gt;]&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;resume:6083a88ee3411b0d17ce02d738f69d47&#34;&gt;Resume&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://drive.google.com/file/d/0B7n4BTQaWqWnNlZmTVBZbS1PcG8/edit?usp=sharing&#34; title=&#34;Resume&#34;&gt;pdf&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;internet-presence:6083a88ee3411b0d17ce02d738f69d47&#34;&gt;Internet Presence&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Blog: &lt;a href=&#34;http://www.varokas.com&#34; title=&#34;varokas&#34;&gt;www.varokas.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Opensource projects on [&lt;a href=&#34;https://github.com/varokas&#34;&gt;github&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;Huskycode Project [&lt;a href=&#34;http://www.huskycode.com&#34;&gt;http://www.huskycode.com&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;Twitter: @varokas&lt;/li&gt;
&lt;li&gt;Facebook: &lt;a href=&#34;http://www.facebook.com/varokas&#34; title=&#34;Facebook&#34;&gt;http://www.facebook.com/varokas&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Contributes to Agile66 [Thai] &lt;a href=&#34;http://www.agile66.com&#34; title=&#34;Agile66&#34;&gt;blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Active participants in

&lt;ul&gt;
&lt;li&gt;Agile66 Facebook &lt;a href=&#34;https://www.facebook.com/groups/agile66/&#34; title=&#34;Agile 66 Group&#34;&gt;group&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;SPIN Thailand&lt;/li&gt;
&lt;li&gt;My internet band group: &lt;a href=&#34;https://www.facebook.com/404production&#34; title=&#34;404 Production&#34;&gt;404 Production&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Talks</title>
      <link>http://www.varokas.com/talks/</link>
      <pubDate>Sat, 02 May 2015 00:00:00 +0000</pubDate>
      
      <guid>http://www.varokas.com/talks/</guid>
      <description>

&lt;h2 id=&#34;in-conferences:49cbbfcf1124f111a37fcbac0faeb48e&#34;&gt;In Conferences&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Agile Thailand 2014&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Continuous Delivery Examples&lt;/li&gt;
&lt;li&gt;How to Recruit for Agile Talents [&lt;a href=&#34;http://www.varokas.com/wp-content/uploads/2014/06/10422676_10152537792868690_1179512964_o.jpg&#34;&gt;notes&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;1-1 มั๊ยแสรด - Pair Programming and TDD by Example (with @juacompe)&lt;/li&gt;
&lt;li&gt;Agile Pitfalls&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Thailand Practical Software Engineering Conference 2013&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Agile in Enterprise&lt;/li&gt;
&lt;li&gt;Panel Discussion&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Agile Thailand 2013&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Agile Transition Pitfalls&lt;/li&gt;
&lt;li&gt;Real Agile #1: Continuous Delivery&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Agile Open Northwest (Portland,OR) 2013&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;There&amp;rsquo;s no Agile&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Agile Tour Bangkok 2012&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Agile Pitfalls [&lt;a href=&#34;http://www.youtube.com/watch?v=Wcn9QBTJzFA&#34;&gt;video&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;Agile Clinic - Q &amp;amp; A on Agile Adoption&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Agile Thailand 2012&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Games for Agile Understanding

&lt;ul&gt;
&lt;li&gt;Dot Game [&lt;a href=&#34;http://www.varokas.com/dot-game/&#34;&gt;blog&lt;/a&gt;] [&lt;a href=&#34;https://docs.google.com/a/panusuwan.com/presentation/d/1vsn4KVMYPDKaVeZaOfsN0YVpYJqvyUu0B2aCF3r9k4w&#34;&gt;slide&lt;/a&gt;]

&lt;ul&gt;
&lt;li&gt;Sketch Me [&lt;a href=&#34;http://www.varokas.com/sketch-me/&#34;&gt;blog&lt;/a&gt;] [&lt;a href=&#34;https://docs.google.com/a/panusuwan.com/presentation/d/1uxs3P7XvkmZb1f7SQxTZ4U3lg2ItB-9_aZjVS3kVYTM&#34;&gt;slide&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;Intro to TDD [&lt;a href=&#34;https://docs.google.com/a/panusuwan.com/presentation/d/1_D0ryPg_hefT2QyVXG3dhuNxk8O17HioOdzEu4W-QX8&#34;&gt;slide&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;Scrum 1-2-3 [&lt;a href=&#34;https://docs.google.com/a/panusuwan.com/presentation/d/1odVPBhh7zTkzF8FK8bICURJVssQ2uuZ9wPRjPBcyfRo&#34;&gt;slide&lt;/a&gt;]&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Bug Day 2012&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;span style=&#34;color: #666666;&#34;&gt;Zero Defects with Agile Methods [&lt;/span&gt;&lt;a href=&#34;https://docs.google.com/presentation/d/1Vir21BvrZx75TSd-hUw-k2x8CbeD8dNURFmspaPwe9c/edit&#34;&gt;slide&lt;/a&gt;]&lt;span style=&#34;color: #666666;&#34;&gt; [&lt;/span&gt;&lt;a href=&#34;http://www.youtube.com/watch?v=irbIDxs3vyg&amp;amp;feature=plcp&#34;&gt;youtube&lt;/a&gt;&lt;span style=&#34;color: #666666;&#34;&gt;]&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;lectures:49cbbfcf1124f111a37fcbac0faeb48e&#34;&gt;Lectures&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Agile Project Management&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Mahidol, Enterprise Architecture, Faculty of Engineering, Master Program (2014)&lt;/li&gt;
&lt;li&gt;ABAC, Faculty of Science, Master Program (2013)&lt;/li&gt;
&lt;li&gt;ExxonMobil Thailand (2013)&lt;/li&gt;
&lt;li&gt;DTAC (2013)&lt;/li&gt;
&lt;li&gt;GoSoft (2013)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Clean Code&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;THJUG Meetup (2014)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Emergent Design Patterns&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;THJUG Meetup (2014)&lt;/li&gt;
&lt;li&gt;Pronto Marketing (2013)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Intro to Agile&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;GoSoft (2012)&lt;/li&gt;
&lt;li&gt;Siam Square (2012)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;workshops:49cbbfcf1124f111a37fcbac0faeb48e&#34;&gt;Workshops&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;TDD&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;DTAC (2014)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;TDD-Refactoring-Patterns&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Agile Thailand 2013&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Ask me Anything Agile&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Using Lean Coffee to organize questions around Agile&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Shipco (2014)&lt;/li&gt;
&lt;li&gt;ABAC (2014)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;papers:49cbbfcf1124f111a37fcbac0faeb48e&#34;&gt;Papers&lt;/h2&gt;

&lt;h4 id=&#34;privacy-risk-assessment-case-studies-in-support-of-square-sei-2009-link-http-www-sei-cmu-edu-library-abstracts-reports-09sr017-cfm:49cbbfcf1124f111a37fcbac0faeb48e&#34;&gt;Privacy Risk Assessment Case Studies in Support of SQUARE, SEI, 2009 [&lt;a href=&#34;http://www.sei.cmu.edu/library/abstracts/reports/09sr017.cfm&#34;&gt;link&lt;/a&gt;]&lt;/h4&gt;

&lt;p&gt;With Prashanth under supervision of &lt;a href=&#34;http://www.sei.cmu.edu/about/people/nrm.cfm&#34;&gt;Dr. Nancy Mead&lt;/a&gt; of the &lt;a href=&#34;http://www.sei.cmu.edu&#34;&gt;SEI&lt;/a&gt;. Studies privacy risk assessment techniques to support the Security Quality Requirements Engineering (&lt;a href=&#34;http://www.sei.cmu.edu/library/abstracts/reports/05tr009.cfm&#34;&gt;SQUARE&lt;/a&gt;) process.&lt;/p&gt;

&lt;h4 id=&#34;measuring-requirements-engineering-success-link-http-www-varokas-com-wp-content-uploads-2010-03-measuring-requirements-engineering-success-pdf:49cbbfcf1124f111a37fcbac0faeb48e&#34;&gt;Measuring Requirements Engineering Success [&lt;a href=&#34;http://www.varokas.com/wp-content/uploads/2010/03/measuring-requirements-engineering-success.pdf&#34;&gt;link&lt;/a&gt;]&lt;/h4&gt;

&lt;p&gt;Techniques and templates to measure effectiveness of requirements engineering in an organization.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Best Things to do in Seattle</title>
      <link>http://www.varokas.com/post/best-things-to-do-in-seattle/</link>
      <pubDate>Fri, 20 Mar 2015 04:49:50 +0000</pubDate>
      
      <guid>http://www.varokas.com/post/best-things-to-do-in-seattle/</guid>
      <description>

&lt;p&gt;Since I&amp;rsquo;ve lived in Seattle for a while. People asked me what are some of the things they should do if they fly there to visit. Never realized Seattle is quite a popular place to be in. So I decided to compile a list for that.&lt;/p&gt;

&lt;p&gt;Obviously this is my heavily biased opinion. Seattle&amp;rsquo;s a great city (especially so if you like nature and hiking). To reduce down to just one item for each category turns out to be really hard.&lt;/p&gt;

&lt;p&gt;But here they are. The list of the very best that Seattle has to offer.&lt;/p&gt;

&lt;h2 id=&#34;city-view:44f88edf92e7a073f103cb736f33ce18&#34;&gt;City View&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://www.varokas.com/images/2015/03/10888387_10153081345713690_7335922192447762246_n.jpg&#34;&gt;&lt;img src=&#34;http://www.varokas.com/images/2015/03/10888387_10153081345713690_7335922192447762246_n.jpg&#34; alt=&#34;10888387_10153081345713690_7335922192447762246_n&#34; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A postcard view of Seattle is at &lt;a href=&#34;https://www.google.com/maps/place/Kerry+Park/@47.629547,-122.360137,15z/data=!4m2!3m1!1s0x0:0x33f7681e2424b58e&#34;&gt;Kerry Park&lt;/a&gt;. It&amp;rsquo;s not really is a park, but a small sightseeing spot overlook the whole city. It will look pretty day or night. On a clear day, you will also see Mount Rainier on the back.&lt;/p&gt;

&lt;h2 id=&#34;hiking:44f88edf92e7a073f103cb736f33ce18&#34;&gt;Hiking&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://www.varokas.com/images/2015/03/fce4646f-3650-4b9d-8ba6-001133ff242f.jpeg&#34;&gt;&lt;img src=&#34;http://www.varokas.com/images/2015/03/fce4646f-3650-4b9d-8ba6-001133ff242f.jpeg&#34; alt=&#34;fce4646f-3650-4b9d-8ba6-001133ff242f&#34; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I went to &lt;a href=&#34;http://www.wta.org/go-hiking/hikes/rattle-snake-ledge&#34;&gt;Rattlesnake Ledge&lt;/a&gt; at least 10 times literally. And would never mind do more. This is my happy place to be in Seattle. It will only take at most 1 hour to go up. It is only moderately steep (1160 ft) but the view is serene and totally worth it. There might be a hiking trail with more beautiful view. But this one is the best given how close it is to the city (50 min) and how rewarding it is to be there.&lt;/p&gt;

&lt;p&gt;When you are up there, don&amp;rsquo;t forgot to look to your left and find a parking lot with a tiny dot that is your car which is very satisfying.&lt;/p&gt;

&lt;h2 id=&#34;food:44f88edf92e7a073f103cb736f33ce18&#34;&gt;Food&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://www.varokas.com/images/2015/03/l-21.jpg&#34;&gt;&lt;img src=&#34;http://www.varokas.com/images/2015/03/l-21.jpg&#34; alt=&#34;l-2&#34; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Salmon here is the greatest. Any decent restaurants in town will know how not to mess up a good ingredient. It&amp;rsquo;s a good sign when you can order different type of Salmon in the menu.&lt;/p&gt;

&lt;p&gt;If you need a name, then let&amp;rsquo;s go to &lt;a href=&#34;http://www.yelp.com/biz/ivars-salmon-house-seattle&#34;&gt;Ivar’s Salmon House&lt;/a&gt;. Apart from good and relatively inexpensive food, you get a killer view of Lake Union. Ask for a window table at reservation. It&amp;rsquo;s not that hard to get one. And smoked salmon chowder is unforgettable.&lt;/p&gt;

&lt;h2 id=&#34;dessert:44f88edf92e7a073f103cb736f33ce18&#34;&gt;Dessert&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://www.varokas.com/images/2015/03/hero_eldiablo.jpg&#34;&gt;&lt;img src=&#34;http://www.varokas.com/images/2015/03/hero_eldiablo-1024x366.jpg&#34; alt=&#34;hero_eldiablo&#34; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Seattle does not have really good dessert spot. But the El Diablo  at &lt;a href=&#34;http://tangorestaurant.com&#34;&gt;Tango&lt;/a&gt; is the best chocolate terrine man ever made. The food is so-so but the terrine is worth going there just to eat the dessert. Plus, they open till 11pm.&lt;/p&gt;

&lt;h2 id=&#34;coffee-shop:44f88edf92e7a073f103cb736f33ce18&#34;&gt;Coffee Shop&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://www.varokas.com/images/2015/03/l-3.jpg&#34;&gt;&lt;img src=&#34;http://www.varokas.com/images/2015/03/l-3.jpg&#34; alt=&#34;l-3&#34; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Seattle&amp;rsquo;s is &lt;a href=&#34;http://www.cnbc.com/id/43896943/page/13&#34;&gt;the most caffeinated city in USA&lt;/a&gt;. And we love to caffeinated ourselves in style. The city is swamped with all cute laid back coffee shops. But I&amp;rsquo;d pick &lt;a href=&#34;http://www.yelp.com/biz/fremont-coffee-seattle&#34;&gt;Fremont Coffee&lt;/a&gt; as a place to be. It&amp;rsquo;s basically a house turned into a small coffee place. And the coffee there is great. This perfectly captures the vibe of having a cup of coffee in Seattle really meant to be.&lt;/p&gt;

&lt;h2 id=&#34;nature:44f88edf92e7a073f103cb736f33ce18&#34;&gt;Nature&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://www.varokas.com/images/2015/03/10622917_10152801914098690_6949598933366306589_n.jpg&#34;&gt;&lt;img src=&#34;http://www.varokas.com/images/2015/03/10622917_10152801914098690_6949598933366306589_n.jpg&#34; alt=&#34;10622917_10152801914098690_6949598933366306589_n&#34; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.nps.gov/mora/index.htm&#34;&gt;Mount Rainier&lt;/a&gt; is Seattle&amp;rsquo;s icon as it has every right to be. It&amp;rsquo;s beautiful. It&amp;rsquo;s close (&amp;lt; 2 hrs drive). And hiking really is optional. If this is your first time, go to Paradise Point. It&amp;rsquo;s beautiful up close as it is for afar. Only drawback is it is seasonal. Only visit in Summer or Fall time.&lt;/p&gt;

&lt;h2 id=&#34;tourist-spot:44f88edf92e7a073f103cb736f33ce18&#34;&gt;Tourist Spot&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://www.varokas.com/images/2015/03/l1.jpg&#34;&gt;&lt;img src=&#34;http://www.varokas.com/images/2015/03/l1.jpg&#34; alt=&#34;l&#34; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Everybody stops by at &lt;a href=&#34;http://www.yelp.com/biz/pike-place-market-seattle&#34;&gt;Pike Place Market&lt;/a&gt;. And honestly it&amp;rsquo;s not that bad of a place compared to other tourist traps. It captures Seattle life quite well. Laid back, close to nature and sincere. Check it out.&lt;/p&gt;

&lt;h2 id=&#34;local-chill-out:44f88edf92e7a073f103cb736f33ce18&#34;&gt;Local Chill out&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://www.varokas.com/images/2015/03/ballard_locks_small_east.jpg&#34;&gt;&lt;img src=&#34;http://www.varokas.com/images/2015/03/ballard_locks_small_east-1024x707.jpg&#34; alt=&#34;ballard_locks_small_east&#34; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hiram M. Chittenden Locks AKA &lt;a href=&#34;http://www.yelp.com/biz/hiram-m-chittenden-locks-seattle&#34;&gt;Ballard Locks&lt;/a&gt; AKA the Salmon ladder place. It&amp;rsquo;s a nice area where you can hangout and look at salmon jumping over a fish ladder. Again it&amp;rsquo;s seasonal (check first). Salmon may not be there all the time but the area is nice all year round.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.varokas.com/images/2015/03/chinook31.jpg&#34;&gt;&lt;img src=&#34;http://www.varokas.com/images/2015/03/chinook31.jpg&#34; alt=&#34;chinook3&#34; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;misc-tips:44f88edf92e7a073f103cb736f33ce18&#34;&gt;Misc Tips&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Sockeye Salmon has red meat by nature. Don&amp;rsquo;t be alarmed. They tasted really good. In matter of fact, try all type of salmons while you&amp;rsquo;re here&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;There&amp;rsquo;s nothing to see up top of Space Needle, no need to go up there.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Bainbridge Island is a bit overrated. The ferry view is super-nice, but there&amp;rsquo;s nothing to do on the island&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Leavenworth is nice, but not worth 2 hrs drive. If you want to see German town, better visit Germany&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Point Defiance Park Zoo has Polar Bears !&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Best Pasta I had in my Life: Il Corvo&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Other restaurants to consider (fine dining) : Matts in the Market, Zoe, Tanaka San, Serious Pie&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;First Starbuck shop is so-so, visit it while you were at Pike Place market. But don&amp;rsquo;t miss the Starbucks Reserve Tasting Room.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Fun Fact: Seattle city today is built on top of a burnt down city. If that intrigued you, take the underground tour to see the underground level of Seattle. There&amp;rsquo;s not much to see, but looking up at people walking on the street is pretty cool.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Another park worth visiting : Olympic National Park&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>เส้นที่ขีดไว้ให้ตัวเอง</title>
      <link>http://www.varokas.com/post/line-for-self/</link>
      <pubDate>Mon, 15 Sep 2014 01:07:26 +0000</pubDate>
      
      <guid>http://www.varokas.com/post/line-for-self/</guid>
      <description>

&lt;p&gt;&lt;img src=&#34;http://www.varokas.com/images/2014/09/line-in-the-sand1.jpg&#34; alt=&#34;รูปจาก: http://management4volunteers.files.wordpress.com&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;หลังจากสังเกตมานานแล้วว่าอะไรคือข้อจำกัดของคนแต่ละคน ซึ่งสุดท้ายก็จบลงที่ข้อจำกัดที่ทุกคนกำหนดเอาไว้ให้กับตนเองเท่านั้น&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;เริ่มจากอาชีพของเรา คนที่บอกว่าตัวเองเป็นโปรแกรมเมอร์ ไม่สนใจธุรกิจ การเงิน ทั้งชีวิตก็จะทำอย่างอื่นไม่เป็น&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;ใครที่บอกว่า อ่อนภาษาอังกฤษ พยายามหลีกเลี่ยงเสมอ ทั้งชีวิตก็จะฟัง พูดและเขียนภาษาอังกฤษไม่ได้&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;อคติว่าเราไม่ชอบประเทศ​ XYZ ก็จะทำให้โลกเราแคบลงทั้งชีวิต ทั้งๆที่ยังไม่เคยไปเหยียบหรือรู้จักคนประเทศนั้นเลย&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;คือเวลาที่บอกตัวเองว่า “ทำไม่ได้” มันก็จะไม่ได้เริ่มลองทำ และสุดท้ายก็จะทำไม่ได้จริงๆ นั่นแหละครับ&lt;/p&gt;

&lt;h2 id=&#34;ทำให-ด-ว-าไม-ได-ส:f663488e8bac80aaaf0466314c42db05&#34;&gt;ทำให้ดูว่าไม่ได้สิ&lt;/h2&gt;

&lt;p&gt;ที่เขียนมาไม่ได้บอกว่า “ทุกอย่างเป็นไปได้ถ้าคิดว่าทำได้” นะ ทุกอย่างที่คิด และลงทุนตั้งใจทำ บางครั้งก็อาจจะออกมาไม่เหมือนกับที่เราหวังไว้ทุกอย่างก็ได้&lt;/p&gt;

&lt;p&gt;แต่มั่นใจได้ 100% เลยว่า ถ้าเราบอกตัวเองว่า ทำไม่ได้ ก็จะไม่ได้เริ่มทำและกลายเป็นทำไม่เป็นทั้งชีวิตแน่นอน&lt;/p&gt;

&lt;p&gt;แต่ถ้าเริ่มทำแล้วบังเอิญมันสำเร็จ ก็จะเป็นการสร้างมาตรฐานใหม่ให้กับตัวเอง ให้กับโลกว่า แบบนี้เราก็ทำได้ มันเป็นไปได้ ลองแล้วมันทำได้จริง&lt;/p&gt;

&lt;p&gt;เพราะฉะนั้นเวลาใครบอกว่าทำอะไรไม่ได้ ผมจะบอกว่า&lt;/p&gt;

&lt;p&gt;“พิสูจน์ให้ดูสิ ว่าทำไม่ได้”&lt;/p&gt;

&lt;h2 id=&#34;พ-ดอ-งกฤษไม-ได:f663488e8bac80aaaf0466314c42db05&#34;&gt;พูดอังกฤษไม่ได้&lt;/h2&gt;

&lt;p&gt;เรื่องนี้เขียนขึ้นมาก็เพราะว่า กำลังจะจัดงาน Agile Tour Bangkok 2014 แล้ว ประเทศก็กำลังจะเปิด AEC แล้ว เราก็ยังติดกับความไม่กล้าที่จะพูดภาษาอังกฤษอยู่เลย ทั้งๆที่เห็นหลายคนก็ทำงานกับฝรั่ง บินไปบินมาตั้งหลายประเทศ ถามตอบภาษาอังกฤษได้ แต่บอกให้ขึ้นเวทีพูดกลับบอกว่าทำไม่ได้&lt;/p&gt;

&lt;p&gt;รู้ไหมว่า งานอไจล์ทุกงานเจอกับความกลัวทั้งนั้น&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Agile Thailand 2012 - กลัวงานมันจะล่ม ไม่มีคนมา (ก็ขายหมดภายในชั่วโมงเดียว)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Agile Tour Bangkok 2012 - กลัวฝรั่งไม่มา กลัวตั๋วแพงคนไม่มา (ก็จัดได้)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Agile Thailand 2013 - กลัว workshop ไม่มีคนมา (ก็ขายหมด)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Agile Thailand 2014 - อันนี้ถูกใจผมที่สุดคือคำพูดว่า “งานแบบ open space ไม่เหมาะกับคนไทย” ซึ่งก็พิสูจน์แล้วว่า ทุกคนทำได้ แบ่งปันความรู้กันเองได้ คนไทยทำได้ ไม่ล่ม เปิดมาตรฐานใหม่ว่าอะไรแบบนี้ในเมืองไทยก็เป็นไปได้&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;สำหรับงาน Agile Tour Bangkok 2014 สิ่งที่กลัวกันที่สุด ดูจะเป็นการบอกกับตัวเองว่า พูดภาษาอังกฤษ ไม่ได้ ซึ่งผมไม่เชื่อ&lt;/p&gt;

&lt;p&gt;ถ้ายังยืนยันว่าตัวเองทำไม่ได้ มาทำให้ผมดูหน่อย ว่ามันเป็นไปไม่ได้ แล้วจะเลิกถามอีกครับ :-)&lt;/p&gt;

&lt;p&gt;ขอให้ speaker ทุกคนโชคดี&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>5 reasons to switch to JUnit&#39;s assertThat(...) today</title>
      <link>http://www.varokas.com/post/5-reasons-to-switch-to-junits-assertthat-today/</link>
      <pubDate>Tue, 19 Aug 2014 04:34:24 +0000</pubDate>
      
      <guid>http://www.varokas.com/post/5-reasons-to-switch-to-junits-assertthat-today/</guid>
      <description>

&lt;p&gt;&lt;img src=&#34;http://www.varokas.com/images/2014/08/junit-logo.png&#34; alt=&#34;junit-logo&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;It bugs me that a good number of Java developers still use these two assert methods when dealing with JUnit.&lt;/p&gt;

&lt;p&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;
assertEquals(expected, actual);
assertTrue(i &gt; 0);

&lt;/code&gt;&lt;/pre&gt;
&lt;/p&gt;

&lt;p&gt;Yes, there are more asserts methods, but these two guys are pretty much what you&amp;rsquo;d use all the time.&lt;/p&gt;

&lt;p&gt;My main problem with assertEquals(..) is that I always get the parameters order messed up between the &amp;ldquo;actual&amp;rdquo; and &amp;ldquo;expected&amp;rdquo;. That does not matter a lot until you have an assertion failure and the error messages report the swapped value.&lt;/p&gt;

&lt;p&gt;For assertTrue(..) we use that for virtually everything else, because assertEquals(true, expression) simply is lame. We need to comes up with all the logic in assertion ourselves, which is also lame. It is also guaranteed that you&amp;rsquo;d always have to put in some descriptive message in assertTrue(&amp;hellip;) for it to make sense when the test is failing.&lt;/p&gt;

&lt;p&gt;JUnit testing is way too uncool, until you&amp;rsquo;ve met the awesome assertThat(&amp;hellip;).&lt;/p&gt;

&lt;p&gt;And here&amp;rsquo;s the reason why you should change the way you do JUnit right now!&lt;/p&gt;

&lt;h2 id=&#34;1-it-reads-from-left-to-right:e977bb9b49819df86c98368907f7484e&#34;&gt;1. It reads from left to right&lt;/h2&gt;

&lt;p&gt;That&amp;rsquo;s how all code should be read and understand.&lt;/p&gt;

&lt;p&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;
int inputValue = 2;
int expectedValue = 2;

assertThat(compute(), is(expectedValue));

&lt;/code&gt;&lt;/pre&gt;
&lt;/p&gt;

&lt;h2 id=&#34;2-it-is-expressive:e977bb9b49819df86c98368907f7484e&#34;&gt;2. It is expressive&lt;/h2&gt;

&lt;p&gt;Even if you don&amp;rsquo;t buy the &amp;ldquo;left-to-right&amp;rdquo; argument. assertThat(..) reads much better in almost every situations.&lt;/p&gt;

&lt;p&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;
int smaller = 2;
int larger = 3;

/* pretty isn&#39;t it? */
assertThat(larger, is(greaterThan(smaller)));

&lt;/code&gt;&lt;/pre&gt;
&lt;/p&gt;

&lt;h2 id=&#34;3-it-produces-readable-error-messages:e977bb9b49819df86c98368907f7484e&#34;&gt;3. It produces readable error messages&lt;/h2&gt;

&lt;p&gt;Expressive language helps in generating an expressive error message.&lt;/p&gt;

&lt;p&gt;Would you rather have just &amp;ldquo;OMG, something is wrong&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;
int smaller = 2;
int larger = 3;

//you&#39;ll get this message: &#34;java.lang.AssertionError&#34;. WTH?
assertTrue(smaller &gt; larger);

&lt;/code&gt;&lt;/pre&gt;
&lt;/p&gt;

&lt;p&gt;Or a detailed message on what is to expect, what is the actual value, pretty much for free?&lt;/p&gt;

&lt;p&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;
int smaller = 2;
int larger = 3;

//Gives you:
//  java.lang.AssertionError:
//  Expected: is a value greater than &lt;3&gt;
//       but: &lt;2&gt; was less than &lt;3&gt;
//
// Clear, concise, effortless
assertThat(smaller, is(greaterThan(larger)));

&lt;/code&gt;&lt;/pre&gt;
&lt;/p&gt;

&lt;h2 id=&#34;4-it-works-really-well-with-collections:e977bb9b49819df86c98368907f7484e&#34;&gt;4. It works really well with collections&lt;/h2&gt;

&lt;p&gt;One of the most miserable things you have to do with traditional assert is to loop through a list to look for some item. Using assertThat feels especially great once you realized how much code you don&amp;rsquo;t have to write (and to come back to read later).&lt;/p&gt;

&lt;p&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;
List&lt;Integer&gt; fibonacci = Arrays.asList(1,2,3,5,8,13);

//Don&#39;t do this, please
boolean found = false;
for(int i : fibonacci) {
    if( i == 5) found = true;
}
assertTrue( &#34;number 5 is in list&#34;, found );

//assertThat is way better
assertThat(fibonacci, hasItem(5));
assertThat(fibonacci, not(hasItem(lessThan(0))));

&lt;/code&gt;&lt;/pre&gt;
&lt;/p&gt;

&lt;h2 id=&#34;5-you-can-actually-start-using-it-right-now-without-any-changes:e977bb9b49819df86c98368907f7484e&#34;&gt;5. You can actually start using it right now, without any changes&lt;/h2&gt;

&lt;p&gt;assertThat(..) is part of JUnit4 for so long. just open up your project and try it. It already is there for you to use!&lt;/p&gt;

&lt;p&gt;Note that we almost always want to pair it with hamcrest-library to get all the useful matchers by default. So stick that into your pom.xml as well. For more information, look at &lt;a href=&#34;https://code.google.com/p/hamcrest/wiki/Tutorial&#34;&gt;hamcrest tutorial&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;bonus:e977bb9b49819df86c98368907f7484e&#34;&gt;Bonus&lt;/h2&gt;

&lt;p&gt;Here&amp;rsquo;s a &lt;a href=&#34;https://github.com/varokas/kata-java/blob/master/src/test/java/com/varokas/test/AssertThatTest.java&#34;&gt;github&lt;/a&gt; link to the code. If you prefer to take it all together at once.&lt;/p&gt;

&lt;p&gt;These are some of the assertions I use all the time.&lt;/p&gt;

&lt;p&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;
//Imagine writing all these by hand...
//
//ps. (are you doing this everyday?)

//String stuff
assertThat(&#34;iGNoreMyCasePlease&#34;, equalToIgnoringCase(&#34;ignoreMyCasePlease&#34;));
assertThat(null, isEmptyOrNullString());

//Math stuff
assertThat(4, both(greaterThan(3)).and(lessThan(5)));

//Collections Stuff
assertThat(new ArrayList&lt;Integer&gt;(), is(empty()));

assertThat(Arrays.asList(1,2,3), hasItem(1));
assertThat(Arrays.asList(1,2,3), containsInAnyOrder(3, 1, 2));
assertThat(Arrays.asList(1,2,3), hasSize(greaterThan(0)));

//Map Stuff
Map&lt;Integer, String&gt; numbers = new HashMap&lt;Integer, String&gt;();
numbers.put(1, &#34;one&#34;);
numbers.put(2, &#34;two&#34;);
numbers.put(3, &#34;three&#34;);

assertThat(numbers, hasEntry(1, &#34;one&#34;));
assertThat(numbers, hasKey(2));
assertThat(numbers, hasValue(&#34;three&#34;));

assertThat(numbers, hasKey(greaterThan(0)));

&lt;/code&gt;&lt;/pre&gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>พื้นฐานวิเคราะห์ราคาหุ้น : ห่านทองคำกับ Discounted Cash Flow</title>
      <link>http://www.varokas.com/post/discounted-cash-flow/</link>
      <pubDate>Mon, 11 Aug 2014 02:18:56 +0000</pubDate>
      
      <guid>http://www.varokas.com/post/discounted-cash-flow/</guid>
      <description>

&lt;p&gt;&lt;a href=&#34;http://www.varokas.com/images/2014/07/goose.jpg&#34;&gt;&lt;img src=&#34;http://www.varokas.com/images/2014/07/goose.jpg&#34; alt=&#34;goose&#34; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;ใครมาถึงโพสนี้เลยกลับไปอ่านสองอันแรกก่อน อันนี้จะต่อยอดมาจาก discounted value นะ&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://www.varokas.com/post/power-of-compound-interest/&#34;&gt;พลังของดอกเบี้ยทบต้น&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://www.varokas.com/post/pricing-discount-value/&#34;&gt;พื้นฐานคำนวณราคาหุ้น : Discounted Value&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;ซ-อห-นแล-วได-อะไร:8a95086c5c4218d309450bd2fdcddb4d&#34;&gt;ซื้อหุ้นแล้วได้อะไร?&lt;/h2&gt;

&lt;p&gt;คนเราเอาเงินไปซื้อหุ้นมาแล้วจะได้สองอย่าง&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;ได้กำไรเวลาขายที่ราคาสูงๆ&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;ได้ปันผล&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;กำไรเวลาขาย จะได้ครั้งเดียว เพราะหลังจากขายไปแล้วก็ขายต่อไม่ได้อีก และถ้าขายไม่แพงกว่าที่ซื้อมา ก็ไม่ได้กำไร หรือ ถ้าราคาไม่ดีกำไรก็น้อยหน่อย สรุปว่า กำไรที่เกิดจากการขาย จะได้มากหรือน้อย ขึ้นอยู่กับว่า ราคาของหุ้นตอนที่ขาย กับตอนที่ซื้อต่างกันเท่าไหร่&lt;/p&gt;

&lt;p&gt;ราคาหุ้นมันก็ขึ้นลงตามใจตลาด แล้วแต่ตอนนั้นคนกำลังเห่อซื้ออะไรอยู่&lt;/p&gt;

&lt;p&gt;ส่วนปันผลเป็นอีกเรื่องหนึ่งเลย คือ ตราบใดที่เรายังถือหุ้นตัวนั้นอยู่ ไม่ขายให้ใคร ก็จะมีปันผลมาเรื่อยๆ ปีละสองสามครั้ง ปันผลจะขึ้นอยู่กับผลกำไรของบริษัทเป็นหลัก กิจการดีก็ปันผลเยอะ กิจการแย่ก็ปันผลน้อย&lt;/p&gt;

&lt;p&gt;คิดง่ายๆ มันคือการเอากำไรของบริษัทมาแบ่งให้ผู้ถือหุ้นทุกคนตามสัดส่วน ใครถือหน่วยหุ้นมากก็ได้ปันผลมาก&lt;/p&gt;

&lt;p&gt;เวลาเค้าเรียก หุ้นห่านทองคำ ก็คือ หุ้นที่เป็นห่านให้ไข่ทองคำ(คือปันผล)เรามาเรื่อยๆ ตราบใดที่เราไม่ฆ่าห่านทิ้ง(เอาไปขาย) เราก็จะเก็บไข่ทองคำมาใช้ได้เรื่อยๆ&lt;/p&gt;

&lt;h2 id=&#34;คำนวณม-ลค-าไข-ทองคำ:8a95086c5c4218d309450bd2fdcddb4d&#34;&gt;คำนวณมูลค่าไข่ทองคำ&lt;/h2&gt;

&lt;p&gt;วิธี Discounted Cash Flow เป็นวิธีคิดมูลค่าของหุ้นจากปันผลล้วนๆ คือ เอามาเฉพาะไข่ทองคำที่เราได้ทุกปีๆ ไม่ได้สนใจว่ากำไรที่อาจจะเกิดขึ้นจากการขายเป็นเท่าไหร่&lt;/p&gt;

&lt;p&gt;ย้ำอีกครั้ง &lt;strong&gt;คำนวณมูลค่าจากปันผลเท่านั้น&lt;/strong&gt; ไม่นับกำไรจากส่วนต่างการขาย&lt;/p&gt;

&lt;p&gt;การคำนวณผลตอบแทนที่จะได้จากหุ้นก็เอาปันผลแต่ละปีมารวมกัน สมมติว่า เรามีหุ้นอยู่ตัวนึง ให้เงินปันผลปีละ 100 บาท ถือไว้ 5 ปี คิดง่ายๆก็ได้เงินสดมาอยู่ในมือ 5x100 = 500 บาทเมื่อหมดปีสุดท้าย ดูเหมือนจะง่าย แต่&amp;hellip;&lt;/p&gt;

&lt;p&gt;อย่าลืมว่า &amp;ldquo;มูลค่า&amp;rdquo; มันจะน้อยกว่านั้น ตาม discounted value ในตารางนี้ (คิด return 4% เท่ากับเอาไปโยนใส่ไว้ในธนาคาร)&lt;/p&gt;

&lt;table &gt;

&lt;thead&gt;
&lt;tr &gt;
&lt;th&gt;  ปีที่&lt;/th&gt;
&lt;th&gt;  ปันผล&lt;/th&gt;
&lt;th&gt;  คำนวณ&lt;/th&gt;
&lt;th&gt;  present value&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody style=&#34;text-align: center&#34;&gt;
&lt;tr&gt;

&lt;td &gt;1
&lt;/td&gt;

&lt;td &gt;100
&lt;/td&gt;

&lt;td &gt;$$ \frac{100}{\left({{1}+{0.04}}\right)^{1}} $$
&lt;/td&gt;

&lt;td &gt;96
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr &gt;

&lt;td &gt;2
&lt;/td&gt;

&lt;td &gt;100
&lt;/td&gt;

&lt;td &gt;$$ \frac{100}{\left({{1}+{0.04}}\right)^{2}}$$
&lt;/td&gt;

&lt;td &gt;92
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr &gt;

&lt;td &gt;3
&lt;/td&gt;

&lt;td &gt;100
&lt;/td&gt;

&lt;td &gt;$$ \frac{100}{\left({{1}+{0.04}}\right)^{3}}$$
&lt;/td&gt;

&lt;td &gt;89
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr &gt;

&lt;td &gt;4
&lt;/td&gt;

&lt;td &gt;100
&lt;/td&gt;

&lt;td &gt;$$ \frac{100}{\left({{1}+{0.04}}\right)^{4}}$$
&lt;/td&gt;

&lt;td &gt;85
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr &gt;

&lt;td &gt;5
&lt;/td&gt;

&lt;td &gt;100
&lt;/td&gt;

&lt;td &gt;$$ \frac{100}{\left({{1}+{0.04}}\right)^{5}}$$
&lt;/td&gt;

&lt;td &gt;82
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;รวมแล้วคือปันผล 5 ปีนี้มีมูลค่า (96+92+89+85+82) = 444 บาทเท่านั้น&lt;/p&gt;

&lt;h2 id=&#34;สำค-ญย-งไง:8a95086c5c4218d309450bd2fdcddb4d&#34;&gt;สำคัญยังไง?&lt;/h2&gt;

&lt;p&gt;สรุปว่าเราจะได้เงินปันผลมาอยู่ในมือจำนวน 500 บาท แต่มีมูลค่าอยู่จริงๆ แค่ 444 บาทเท่านั้น (เงินน่ะมันไม่หายไปไหนหรอกแต่มูลค่ามันไม่เท่าเดิม) แล้วทำไมต้องคิดให้ยุ่งด้วย ?!? เพราะมันสำคัญตรงช่วยในการตัดสินใจลงทุน&lt;/p&gt;

&lt;p&gt;ถ้าวันนี้มีคนเอาหุ้นตัวข้างบนมาให้เราถือรอปันผลไป 5 ปี กับ เอาเงินสดมาให้ 460 บาท จะเอาทางเลือกไหน? รู้ตามนี้แล้วเราคงเอาเงินสดดีกว่า เพราะมูลค่าจริงๆ สูงกว่า&lt;/p&gt;

&lt;p&gt;หลักการก็มีแค่นี้แหละครับ การประเมินมูลค่าหุ้นแทบทั้งหมดกลับมาที่สูตรนี้ทั้งนั้น&lt;/p&gt;

&lt;p&gt;ปกติก็ไม่ได้กรอกกันทุกช่องให้เมื่อยแบบนี้หรอก จะมีสูตรลัดในหลายกรณี ต่อไปจะเขียนเรื่องสูตรลัดต่างๆ ที่ใช้คำนวณ discounted cash flow ให้&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>ระบายอารมณ์เรื่อง Swift ในมุมมองของ Agilist</title>
      <link>http://www.varokas.com/post/swift-agilist/</link>
      <pubDate>Sat, 09 Aug 2014 04:11:31 +0000</pubDate>
      
      <guid>http://www.varokas.com/post/swift-agilist/</guid>
      <description>

&lt;p&gt;ไม่ได้เขียนบล็อกเรื่อง Programming มานาน เดี๋ยวจะคิดว่านนเปลี่ยนไปทำไฟแนนซ์แล้ว วันนี้เลยอยากจะมาระบายอารมณ์​ (ทั้งอารมณ์ดีและอารมณ์เสีย) เรื่อง Swift จากมุมมองของ Agilist ซักหน่อย&lt;/p&gt;

&lt;p&gt;จริงๆ ไม่เคยอยากจะแตะอะไรเกี่ยวกับ iOS เลยตั้งแต่เห็น Objective-C แว๊บแรกแล้ว เพราะดูน่ากลัวมาก ไม่น่าเชื่อว่าไอ้ที่เราถูๆ ลื่นๆ บนไอโฟนมันจะถูกเขียนอยู่บนอะไรที่โบราณขนาดนี้ เข้าใจว่าหลายคนก็คงไม่อยากจะไปยุ่งกับมันหรอก แต่ทำไงได้มันไม่มีทางเลือก&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.varokas.com/images/2014/08/2a79d285a6f440d61b4bde229e0fe04e1ff1c9b7.png&#34;&gt;&lt;img src=&#34;http://www.varokas.com/images/2014/08/2a79d285a6f440d61b4bde229e0fe04e1ff1c9b7-1024x588.png&#34; alt=&#34;2a79d285a6f440d61b4bde229e0fe04e1ff1c9b7&#34; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;พอ Apple ประกาศ​ Swift แว๊บแรกนี่ดูดีมากเลย&amp;hellip; พยายามจะไปโหลดทันที แต่..เสียตังค์ T_T&lt;/p&gt;

&lt;p&gt;ได้ลองเอาจริงจังๆ ก็ตอน XCode Beta 3 เนี่ยแหละ เค้าเปิดให้โปรแกรมเมอร์จนๆ ทั่วไปอย่างเราได้โหลดมาใช้ฟรีแล้ว ก็เลยลองมาเล่นดู ก็เล่นเสร็จตั้งนานละ เขียนบล็อกก่อนเค้าจะออกของจริงก็แล้วกัน เผื่อมีใครเล่นอยู่ด้วย&lt;/p&gt;

&lt;p&gt;เนื่องจากไม่รู้จะทำอะไรดี ก็เลยงัด &lt;a href=&#34;http://codingdojo.org/cgi-bin/index.pl?KataTennis&#34;&gt;Kata Tennis&lt;/a&gt; มาจัดซักรอบ จะได้รู้ว่าภาษากับ tools มันไปถึงไหนละ&lt;/p&gt;

&lt;h2 id=&#34;อารมณ-ด-ภาษาง-าย:acf2f6a40a02890e5164c61d395a7789&#34;&gt;อารมณ์ดี : ภาษาง่าย&lt;/h2&gt;

&lt;p&gt;ที่อยากลองเล่น Swift เพราะดูผ่านๆแล้วมันเหมือนกับ Scala อย่างกับจะถอดแบบมาเลย แต่พอลองเข้าไปจริงๆ แล้วมันก็มีต่างกันหลายอย่างนะ เหมือนยืมๆ มาจาก Go บ้าง จาก Scala บ้าง เอาของตัวเองใส่เข้าไปบ้าง รวมๆ แล้วก็เป็นภาษาที่อ่านง่าย ไม่ค่อยมี keyword ไม่จำเป็นใส่เข้ามาเท่าไหร่&lt;/p&gt;

&lt;p&gt;ที่สำคัญคือไม่พยายามยัดเยียดอะไรบางอย่างเข้ามาในตัวภาษา เหมือนกับ XML หรือ Actor Model ของ Scala ที่พยายามอัดเข้ามา (แต่ตอนนี้ตัดสินใจเริ่มๆเอาออกไปแล้ว)&lt;/p&gt;

&lt;h2 id=&#34;อารมณ-ด-documentation-อ-านง-าย:acf2f6a40a02890e5164c61d395a7789&#34;&gt;อารมณ์ดี : Documentation อ่านง่าย&lt;/h2&gt;

&lt;p&gt;ไม่รู้อันนี้เป็นเวทมนต์อะไรของ Apple รึเปล่า แต่ Document ของ Swift รู้สึกได้ว่าเป็นระบบมาก อ่านง่ายมาก แบ่งเป็นหมวดหมู่ดี จะหาอะไรก็ง่าย ตัวอย่างชัดเจน ของง่ายๆ วางไว้ตอนแรก ใครอยากโดนของแรงๆ ก็ไปอ่านในหมวด Language Reference ซะ&lt;/p&gt;

&lt;p&gt;ไม่เชื่อลองไปดูได้ &lt;a href=&#34;https://developer.apple.com/library/prerelease/ios/documentation/Swift/Conceptual/Swift_Programming_Language/TheBasics.html&#34;&gt;Swift Documentation&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;ต่างกับภาษาอื่นๆ ที่บางทีเหมือนเอา Wiki มาเย็บๆ กันมากกว่า&lt;/p&gt;

&lt;h2 id=&#34;อารมณ-ด-type-safe-ก-บ-type-inference:acf2f6a40a02890e5164c61d395a7789&#34;&gt;อารมณ์ดี : Type-Safe กับ Type Inference&lt;/h2&gt;

&lt;p&gt;ส่วนตัวชอบภาษาแบบ static ถึงแม้มันจะต้องง้อ compiler เยอะๆ กว่าจะยอมให้ผ่านก็เถอะ รู้สึกเองว่ายุคนี้แล้ว static checker ก็พัฒนาไปถึงไหนๆ แล้ว ยังอยากจะมาเสี่ยงให้ของมันพังตอนรันอีกทำไม? ถ้าไม่อยากให้พังก็ต้องเขียนเทสมาครอบเยอะ ซึ่งก็ไม่ค่อยยอมจะเขียนกันอยู่ดี&lt;/p&gt;

&lt;p&gt;ก็เลยรู้สึกดีว่า Apple ตัดสินใจทำภาษาใหม่แบบ static นะ อาจจะไม่ถูกใจทุกคน แต่ถูกใจเรามาก ฮ่าๆๆ&lt;/p&gt;

&lt;p&gt;อันนี้ไม่รู้ว่าก็อบมาจาก Scala หรือเปล่า แต่ชอบมากตรงที่ String Interpolation ก็โดนเช็คด้วย หมดปัญหาข้อความพังอีกต่อไป (ลาก่อน sprintf)&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.varokas.com/images/2014/08/Screen-Shot-2014-07-15-at-5.19.47-PM.png&#34;&gt;&lt;img src=&#34;http://www.varokas.com/images/2014/08/Screen-Shot-2014-07-15-at-5.19.47-PM.png&#34; alt=&#34;Screen Shot 2014-07-15 at 5.19.47 PM&#34; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;อารมณ-เส-ย-refactoring:acf2f6a40a02890e5164c61d395a7789&#34;&gt;อารมณ์เสีย : Refactoring&lt;/h2&gt;

&lt;p&gt;เอาไปรูปเดียวแทนได้เป็นพันคำ&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.varokas.com/images/2014/08/Screen-Shot-2014-07-16-at-11.53.11-AM.png&#34;&gt;&lt;img src=&#34;http://www.varokas.com/images/2014/08/Screen-Shot-2014-07-16-at-11.53.11-AM.png&#34; alt=&#34;Screen Shot 2014-07-16 at 11.53.11 AM&#34; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;ก็ยังอุตส่าห์เป็นไอเท็มในเมนูให้คลิ๊กแล้วผิดหวังอ่ะนะ อย่างน้อยขอ Extract Method ก็ยังดีนะครับ -*- เอาไว้จัดโค้ดง่ายๆ นี่ต้องมาก๊อบมือเองหมดเลย (ไม่ทำ TDD ไม่รู้หรอก)&lt;/p&gt;

&lt;h2 id=&#34;อารมณ-เส-ย-บ-ก:acf2f6a40a02890e5164c61d395a7789&#34;&gt;อารมณ์เสีย : บั๊ก&lt;/h2&gt;

&lt;p&gt;ภาษาที่ดูง่ายๆนี้บางทีมันก็มีจุดแปลกๆอยู่ในในภาษาเยอะเลย เช่น ไม่มี private method ?!? อันนี้เค้าบอกเดี๋ยวจะแก้ในรุ่นเต็ม ก็รอดูกัน&lt;/p&gt;

&lt;p&gt;บางอันก็เป็นเหมือนบั๊กใน compiler มั๊ง เช่นถ้าเขียน circular reference เพื่อที่จะทำ container แบบนี้ ก็จะทำให้ XCode พังได้เลยทีเดียว&lt;/p&gt;

&lt;p&gt;[code]
protocol ScoreState {
  func aWins(context: ScoreStateContext)
  &amp;hellip;
}
protocol ScoreStateContext {
  func setScoreState(scoreState: ScoreState)
  &amp;hellip;
}
[/code]&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.varokas.com/images/2014/08/Screen-Shot-2014-07-16-at-11.46.53-AM.png&#34;&gt;&lt;img src=&#34;http://www.varokas.com/images/2014/08/Screen-Shot-2014-07-16-at-11.46.53-AM.png&#34; alt=&#34;Screen Shot 2014-07-16 at 11.46.53 AM&#34; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;นี่ไม่ได้ตั้งใจแกล้งนะ กำลังลอง refactor มันเป็น state pattern ใช้งานจริงๆ&lt;/p&gt;

&lt;h2 id=&#34;สร-ป:acf2f6a40a02890e5164c61d395a7789&#34;&gt;สรุป&lt;/h2&gt;

&lt;p&gt;สรุปดื้อๆ ก็อารมณ์ดีมากกว่าอารมณ์เสียนะ ภาษาง่ายดี ไม่พยายามทำตัวให้มีลูกเล่นแปลกๆ ทำให้อยากเล่น iOS มากขึ้นเป็นพันเท่า แต่ถ้าจะเอาอะไรจริงจังก็คงมีบั๊กอยู่เยอะพอสมควร ระวังด้วยละกัน&lt;/p&gt;

&lt;h2 id=&#34;show-me-the-code:acf2f6a40a02890e5164c61d395a7789&#34;&gt;Show me the Code&lt;/h2&gt;

&lt;p&gt;ใครสนใจโค้ดไปดูดมาได้จาก github : &lt;a href=&#34;https://github.com/varokas/kata-swift/blob/master/kata-swift-test/kata_tennis_test.swift&#34;&gt;kata-swift&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;ปล.​ กรุณาอย่าด่าว่า ทำไมเขียนโค้ดในไฟล์เทส เพราะพยายามแล้วแต่เซ็ตโปรเจค XCode ไม่เป็นเลยซักนิดเดียว T_T&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>5 เหตุผลที่ CFO คุณจะตกหลุมรัก Agile</title>
      <link>http://www.varokas.com/post/cfo-love-agile/</link>
      <pubDate>Tue, 05 Aug 2014 05:47:03 +0000</pubDate>
      
      <guid>http://www.varokas.com/post/cfo-love-agile/</guid>
      <description>

&lt;p&gt;&lt;a href=&#34;http://www.varokas.com/images/2014/08/cfo-final.jpg&#34;&gt;&lt;img src=&#34;http://www.varokas.com/images/2014/08/cfo-final.jpg&#34; alt=&#34;cfo-final&#34; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;อไจล์หลายทีมเริ่มมาจากกลุ่มของโปรแกรมเมอร์เอา practice ต่างๆ ของ Scrum, Kanban, XP มาลองทำแล้วก็พบว่า ส่งมอบของได้เรื่อยๆสม่ำเสมอ ลูกค้ามีความสุข แล้วทีมก็มีความสุข ทุกคนมีความสุข&lt;/p&gt;

&lt;p&gt;แต่พอไปเสนอกับฝ่ายบัญชีหรือจะเป็นท่าน CFO โดยตรงอาจจะโดนถามว่า &amp;ldquo;สนุกแล้วงานเสร็จเร็วขึ้นหรอ?&amp;rdquo; ก็คงมึนกันไปซักพัก&lt;/p&gt;

&lt;p&gt;เพราะฝ่ายบัญชีเป็นผู้กุมกระเป๋าตังค์ของบริษัทต้องคิดรอบคอบว่าทุกอย่างในบริษัทจะต้องทำให้บริษัทมีกำไรต่อไป เกิดเงินหมุนเวียนมาจ่ายเหล่าพนักงานผู้มีความสุขกับการส่งมอบซอฟต์แวร์อย่างสม่ำเสมอ คำถามเรื่องเงินๆทองๆ ก็เป็นเรื่องธรรมดา&lt;/p&gt;

&lt;p&gt;เรามาดูกันว่าทำไม CFO คุณถ้าได้ลองอไจล์แล้ว จะติดหนึบไม่ไปไหน เอาไว้ไปคุยกันจะได้มีความสุขครบกันทุกคน&lt;/p&gt;

&lt;h2 id=&#34;1-projected-revenue-จะแม-นข-น:0cc3ac35e9888fbedb2f67e45e572096&#34;&gt;1. Projected Revenue จะแม่นขึ้น&lt;/h2&gt;

&lt;p&gt;เวลาบริษัทรายงานบัญชีประจำไตรมาส ต้องมีการรายงานว่า ผลประกอบการในช่วงไตรมาสถัดไป ลากรวมถึงตอนสิ้นปี มันจะเป็นเท่าไหร่? จากนั้นจะมี Audit มาช่วยตรวจว่ามันทำได้จริง ไม่ได้ขี้โม้ขึ้นมาเฉยๆ&lt;/p&gt;

&lt;p&gt;ถ้าเป็นแบบ Waterfall ปกติ จะโดนถามอยู่แล้วว่า
1. โปรเจคจะจบเมื่อไหร่?
2. ค่าใช้จ่ายมีเท่าไหร่?  (เครื่องมือ, staff, etc)
3. เสร็จแล้วมันจะขายได้เท่าไหร่? (ถ้าจะเอาไปขายนะ)&lt;/p&gt;

&lt;p&gt;เลขเหล่านี้ก็ได้มาจากการประมาณการ (estimate) ของเจ้าของโปรเจค ก็ไปทำ work breakdown, gantt chart มาว่าจะใช้อะไร เท่าไหร่? เมื่อไหร่? สวมหมวกหมอดูแล้วก็เสกตัวเลขออกมา(อย่างมีหลักการ)&lt;/p&gt;

&lt;p&gt;ซึ่งก็รู้ๆ กันอยู่แล้วว่า เลขทั้งสามตัวข้างบนทั้งหมด มันไม่เคยจะแม่นเลย&amp;hellip; ใช่ไหม? โดยเฉพาะคำถามหลักคือ มันเสร็จเมื่อไหร่? เพราะจะได้ขายได้ มีเงินมาใช้หมุนเวียน&lt;/p&gt;

&lt;p&gt;บัญชีเค้าก็รู้อยู่แล้วว่าไม่มีใครทายอนาคตได้เป๊ะหรอก ก็ต้องมีการมาปรับแก้กันทุกไตรมาส ตามการประมาณการรอบใหม่ที่ไปถามมาจากโปรเจคต่างๆ&lt;/p&gt;

&lt;p&gt;ถ้าเป็น waterfall เวลา estimate ใหม่จะเอามาจากอะไรล่ะ? ถ้าไม่คิดมากก็ดูว่าเกินมาเท่าไหร่ ง่ายๆ คือ ถ้าตอนนี้เราเกินจากแผนไปเดือนนึง ก็เพิ่มตอนจบไปเดือนนึง&amp;hellip;&lt;/p&gt;

&lt;p&gt;ปัญหาคือแล้วมีอะไรรับประกันว่า ตอนช่วงหลังๆมันจะทำงานได้ตามที่วางแผน เช่น ตอนนี้กำลังเก็บ requirement และ design อยู่ แล้วใช้เวลาเกินไปจากแผนในขั้นนี้ 10% จะคิดง่ายๆ ได้ไหมว่าทุกๆ phase ของการทำงาน (dev/test/deploy) ก็จะเกินมา 10% เหมือนกัน? หรือจะบอกว่าไม่เกินหรอก(แล้วค่อยไปเพิ่มเอาทีหลัง)​ จะทำแบบไหนดี? จะบอกให้คนอื่นเชื่อตามเราได้ยังไงว่าประเมินขั้นถัดไปถูกต้อง?&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.varokas.com/images/2014/08/ganttchart.gif&#34;&gt;&lt;img src=&#34;http://www.varokas.com/images/2014/08/ganttchart.gif&#34; alt=&#34;ที่มา: http://www.virtualboss.net/screenshots/ganttchart.htm&#34; /&gt;
&lt;/a&gt; ที่มา: &lt;a href=&#34;http://www.virtualboss.net/screenshots/ganttchart.htm&#34;&gt;http://www.virtualboss.net/screenshots/ganttchart.htm&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;เอาข้อมูลจากในอดีตไหม? ปกติเราใช้เวลาเกินไปเท่าไหร่? แล้วโปรเจคไหนเอามาเทียบได้? ความเสี่ยงเท่ากันไหม? คนทำกลุ่มเดียวกันหรือเปล่า? (มึนหรือยัง?)&lt;/p&gt;

&lt;p&gt;อไจล์ช่วยตรงจุดนี้ได้เพราะเราจงใจทำ software ทั้งกระบวนการจนกระทั่งเข็น feature มาใช้งานได้จนจบเลยในไม่กี่สัปดาห์ สมมติว่าเรามีของใน backlog ของงานอยู่ 100 หน่วย ทำเสร็จไปแล้ว 20 หน่วยในเดือนเดียว คิดเลขไม่ยากเลยใช่ไหม? ว่าอีก 4 เดือนก็น่าจะเสร็จอีก 80 หน่วยที่เหลือ (ยังไม่นับว่าของที่เสร็จแล้วอาจจะเอาไปใช้งานได้ประโยชน์ก่อนด้วยนะ)&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.varokas.com/images/2014/08/Screen-Shot-2014-08-04-at-10.05.56-PM.png&#34;&gt;&lt;img src=&#34;http://www.varokas.com/images/2014/08/Screen-Shot-2014-08-04-at-10.05.56-PM.png&#34; alt=&#34;Screen Shot 2014-08-04 at 10.05.56 PM&#34; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;จุดสำคัญคือ มั่นใจในตัวเลขประมาณการได้มากกว่าเยอะ เอาข้อมูลจากในโปรเจคจริงๆ ที่ทำนั่นแหละ มาประมาณสิ่งที่จะเกิดต่อไปในอนาคต กิจกรรมทุกแบบของโปรเจคในอีก 80 หน่วยที่เหลือ เราทำหมดแล้วใน 20 หน่วยแรก ตั้งแต่เก็บข้อมูล ออกแบบ เขียน เทส จนเข็นออกมาลองใช้งานดู&lt;/p&gt;

&lt;p&gt;โปรเจคเดียวกัน ความเสี่ยง ทีมงาน เครื่องมือ เหมือนกัน ก็สามารถเอาความเร็วในการทำงานตอนแรก มาใช้ประเมินสิ่งที่เหลือได้อย่างมั่นใจ&lt;/p&gt;

&lt;p&gt;ของแถมคือทีมอไจล์(โดยเฉพาะสกรัม) ส่วนมากทำการประเมินตรงนี้เป็นประจำอยู่แล้วตอนผ่าน Release Burndown เดินไปถามได้ทันทีทุกเวลาที่ต้องการ&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.varokas.com/images/2014/08/releaseburndown.png&#34;&gt;&lt;img src=&#34;http://www.varokas.com/images/2014/08/releaseburndown.png&#34; alt=&#34;รูปจาก http://www.mountaingoatsoftware.com/agile/scrum/release-burndown&#34; /&gt;
&lt;/a&gt; รูปจาก &lt;a href=&#34;http://www.mountaingoatsoftware.com/agile/scrum/release-burndown&#34;&gt;http://www.mountaingoatsoftware.com/agile/scrum/release-burndown&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;2-ค-าใช-จ-ายตรงไปตรงมา:0cc3ac35e9888fbedb2f67e45e572096&#34;&gt;2. ค่าใช้จ่ายตรงไปตรงมา&lt;/h2&gt;

&lt;p&gt;อไจล์ทำให้ตัดคำถามอมตะที่น่าปวดหัวออกไปได้ว่า &amp;ldquo;ใช้ทีมไหนเมื่อไหร่?&amp;rdquo; (Dev, QA, BA, test, infra, &amp;hellip;)&lt;/p&gt;

&lt;p&gt;ถ้าเป็น waterfall ก็ต้องมาเล็งว่า กี่เดือนจะเก็บ requirement เสร็จ แล้วจะได้เอาทีม Dev มาเสียบต่อ แล้วถ้าเค้าไม่เสร็จตามกำหนดล่ะ? จะต้องไปทำเรื่องคุยกับใครว่าต้องดึง BA มานานอีกหน่อย? ชะลองานของ Dev ออกไปไหม? (ช่วงนี้ก็เกิดอาการสูญญ�����กาศ &amp;ldquo;ว่างงาน&amp;rdquo; ของทีม Dev ไป)&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.varokas.com/images/2014/08/illustration.png&#34;&gt;&lt;img src=&#34;http://www.varokas.com/images/2014/08/illustration.png&#34; alt=&#34;Waterfall รักคนไม่เ���่ากัน แล้วแต่อยู่ช่วงไหนของโปรเจค&#34; /&gt;
&lt;/a&gt; Waterfall รักคนไม่เท่ากัน แล้วแต่อยู่ช่วงไหนของโปรเจค&lt;/p&gt;

&lt;p&gt;โปรเจคอไจล์ถ้าบริหารอย่างถูกต้อง จะต้องมีการ &amp;ldquo;ใช้ทุก role ตลอดเวลา&amp;rdquo; เพราะกระบวนการทั้งหมดตั้งแต่ Requirement/Design/Code/Test/Deploy จะถูกหดลงมาสั้นๆ แค่สองอาทิตย์ หรือ น้อยกว่านั้น ถ้ามองรวมๆ ในแต่ละอาทิตย์ก็ดูเหมือนว่าต้องใช่ทุกส่วนอยู่ตลอดเวลา จะต้องใช้ใครจำนวนมากน้อยเท่าไหร่อันนี้แล้วแต่&lt;/p&gt;

&lt;p&gt;ประเด็นหลักคือ ใช้ทุกคนอย่างสม่ำเสมอ ไม่มีใคร &amp;ldquo;งานเข้า&amp;rdquo; ช่วงไหนเป็นพิเศษ&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.varokas.com/images/2014/08/illustration2.png&#34;&gt;&lt;img src=&#34;http://www.varokas.com/images/2014/08/illustration2.png&#34; alt=&#34;อไจล์ทำเหมือนเดิมทุกรอบ ใช้คนเท่าๆ เดิมทุกรอบ&#34; /&gt;
&lt;/a&gt; อไจล์ทำเหมือนเดิมทุกรอบ ใช้คนเท่าๆ เดิมทุกรอบ&lt;/p&gt;

&lt;p&gt;ค่าใช้จ่ายในการดำเนินงาน (Operating Expenses - ไม่รวมค่าเครื่องมือ อุปกรณ์) ก็เป็นสัดส่วนคงที่ dev 4 คน QA 1 คน Product Owner 1 คน ไปเรื่อยๆ จนกว่าจะขี้เกียจทำโปรเจคนี้ต่อ&lt;/p&gt;

&lt;h2 id=&#34;3-มองเห-น-roi-เร-วข-น:0cc3ac35e9888fbedb2f67e45e572096&#34;&gt;3. มองเห็น ROI เร็วขึ้น&lt;/h2&gt;

&lt;p&gt;ถ้าอไจล์ทำให้ออกของที่มีคุณค่าได้สม่ำเสมอทุกสองอาทิตย์ ก็แปลว่า ไม่ต้องรอจน &amp;ldquo;จบโปรเจค&amp;rdquo; ก็จะมีของที่ใช้งานได้เป็นส่วนๆออกมาให้จิ้มเล่นกัน ทีนี้ขึ้นอยู่กับการตัดสินใจของฝ่านธุรกิจล้วนๆ ว่าจะเอาไปให้ผู้ใช้เริ่มใช้งานได้เมื่อไหร่?&lt;/p&gt;

&lt;p&gt;ซึ่งคำตอบที่ถูกต้อง คือ &amp;hellip;​ ถ้าของมีประโยชน์ก็หาทางให้เริ่มใช้ได้เลยสิ จะหมักเอาไว้ทำไม?&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.varokas.com/images/2014/08/Screen-Shot-2014-08-04-at-10.24.10-PM.png&#34;&gt;&lt;img src=&#34;http://www.varokas.com/images/2014/08/Screen-Shot-2014-08-04-at-10.24.10-PM.png&#34; alt=&#34;Screen Shot 2014-08-04 at 10.24.10 PM&#34; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;จากนั้นก็เอาข้อมูลจากการเข็นออกไปเริ่มใช้งานนั่นแหละมาดูว่า ตกลงมันทำกำไร ยอดขาย หรือได้ประโยชน์อื่นๆ จริงอย่างที่โม้ไว้หรือเปล่า? ถ้าใครเอาทฤษฎีจาก Lean Startup มาตั้งสมมติฐานแล้ววัดผลประกอบไปด้วยจะเยี่ยมมาก&lt;/p&gt;

&lt;p&gt;ค่าใช้จ่ายรู้อยู่แล้วจากข้อ (2) ว่ามันคงที่สม่ำเสมอ ถ้า Revenue มาเร็วจากการเอาไปใช้งานจริง ก็เริ่มคำนวน ROI จากวันที่ลองใช้งานได้เลย&lt;/p&gt;

&lt;p&gt;ไม่ต้องรออีกสองปีโปรเจคจบ ปล่อยของใหญ่ออกไปทีเดียว แล้วค่อยมาลุ้นกัน&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.varokas.com/images/2014/08/Agile-Dark-Horse-Release-Value.jpg&#34;&gt;&lt;img src=&#34;http://www.varokas.com/images/2014/08/Agile-Dark-Horse-Release-Value.jpg&#34; alt=&#34;ในอไจล์จะมี revenue กลับมาบ้าง แทนที่จะเสียๆๆ ตอนแรกอย่างเดียว (รูปจาก http://tiny-giant-books.com/blog/agile-value-dark-horse-whats-your-backlog-pattern/)&#34; /&gt;
&lt;/a&gt; ในอไจล์จะมี revenue กลับมาบ้าง แทนที่จะเสียๆๆ ตอนแรกอย่างเดียว&lt;br /&gt;
(รูปจาก &lt;a href=&#34;http://tiny-giant-books.com/blog/agile-value-dark-horse-whats-your-backlog-pattern/&#34;&gt;http://tiny-giant-books.com/blog/agile-value-dark-horse-whats-your-backlog-pattern/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;ซึ่งการมีของออกมาให้จิ้มได้สัมผัสได้เร็วขึ้นก็จะมีผลดีคือ&amp;hellip;&lt;/p&gt;

&lt;h2 id=&#34;4-ความเส-ยงถ-กประเม-นเร-วข-น:0cc3ac35e9888fbedb2f67e45e572096&#34;&gt;4. ความเสี่ยงถูกประเมินเร็วขึ้น&lt;/h2&gt;

&lt;p&gt;อันนี้อาจจะไม่มีผลโดยตรงกับการลงบัญชี(รึเปล่า?) แต่จะมีผลโดยตรงกับการประหยัดค่าใช้จ่ายมากๆ ในกรณีที่โปรเจคมีความเสี่ยงสูง&lt;/p&gt;

&lt;p&gt;ถ้าบริหารโปรเจคอไจล์ถูกต้อง ช่วงต้นจะต้องพยายามทำสิ่งที่มีความเสี่ยงสูงสุดของโปรเจคก่อน เข็นออกมาให้เห็นว่า ความเสี่ยงที่ประเมินไว้ มันมีอยู่จริงหรือมันเป็นความกลัวไปเองของเรา&lt;/p&gt;

&lt;p&gt;อไจล์เน้นมากๆ ให้ทำและพิสูจน์ความเสี่ยงใหญ่ๆ ให้เห็นตั้งแต่แรกเลยว่าไปรอด(หรือไม่รอด) ผ่านทางการเอาความเสี่ยงพวกนั้นแหละมาเขียนให้อยู่ในรูปของ feature/user story ให้ได้แล้วเข็นออกมาให้ใช้ในรีลีสแรกๆ เดือนแรกๆ&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.varokas.com/images/2014/08/ip.png&#34;&gt;&lt;img src=&#34;http://www.varokas.com/images/2014/08/ip.png&#34; alt=&#34;โปรเจคอไจล์ลดความเสี่ยงตั้งแต่เนิ่นๆ&#34; /&gt;
&lt;/a&gt;โปรเจคอไจล์ลดความเสี่ยงตั้งแต่เริ่ม&lt;br /&gt;
(รูปจาก: &lt;a href=&#34;http://dandriani.wordpress.com/category/lifecycle-processes/&#34;&gt;http://dandriani.wordpress.com/category/lifecycle-processes/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;ต่างจากแบบ Waterfall ที่เราอาจจะมีระบบการบริหารจัดการความเสี่ยงของโปรเจคยังไงก็ได้ ไม่รู้เหมือนกัน (ก็แล้วแต่บริษัทจะระบบดีหรือไม่ดียังไง) ถ้าไม่คอยลงไปดูส่วนมากทีมก็มักจะทำ &amp;ldquo;ของง่ายๆ&amp;rdquo; ก่อนเพราะมันง่ายดี และทำให้เห็นผลงานออกมาเหมือนว่าจะราบรื่น แล้วก็เอาของยากๆ น่ากลัวๆ ไปหมกๆ ไว้ตอนหลัง&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.varokas.com/images/2014/08/wfp1.png&#34;&gt;&lt;img src=&#34;http://www.varokas.com/images/2014/08/wfp1.png&#34; alt=&#34;Waterfall ความเสี่ยงอาจจะโดนโยนกองไว้ระเบิดตอนท้ายๆ&#34; /&gt;
&lt;/a&gt; Waterfall ความเสี่ยงอาจจะโดนโยนกองไว้ระเบิดตอนท้ายๆ&lt;br /&gt;
(รูปจาก: &lt;a href=&#34;http://dandriani.wordpress.com/category/lifecycle-processes/&#34;&gt;http://dandriani.wordpress.com/category/lifecycle-processes/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;การทำออกมาให้มันรู้ๆไปเลยตั้งแต่แรก ว่าอะไรเป็นอะไร เปลี่ยนจากของที่เคยเป็น &amp;ldquo;ความเสี่ยง&amp;rdquo; ให้กลายมาเป็น &amp;ldquo;ปัญหา&amp;rdquo; หรือ &amp;ldquo;ไม่ใช่ปัญหา&amp;rdquo; ให้เร็วที่สุดจะได้เห็นกันตั้งแต่เนิ่นๆ ไม่ต้องพยายามมาหมักไว้นานๆ แล้วระเบิดตูมทีเดียวอีกสองปีข้างหน้า&lt;/p&gt;

&lt;h2 id=&#34;5-ต-ดส-นใจได-เร-วข-นม-นใจข-น:0cc3ac35e9888fbedb2f67e45e572096&#34;&gt;5. ตัดสินใจได้เร็วขึ้นมั่นใจขึ้น&lt;/h2&gt;

&lt;p&gt;ปกติแล้วเราดู ROI กับความเสี่ยงกันไปทำไมล่ะ?&lt;/p&gt;

&lt;p&gt;ในโลกธุรกิจ คำถามและคำตอบสุดท้ายก็คือ ทำแล้วมันกำไรดีไหม? คุ้มไหม? ทำต่อดีไหม?&lt;/p&gt;

&lt;p&gt;แน่นอนว่าของทุกอย่างในโลกมันไม่ได้ทำแล้วขายได้ตามที่หวัง ไม่ว่าจะเป็นความเสี่ยงตัวใหญ่ๆที่ระเบิดใส่ หรือเอาไปขายแล้วไม่ติดตลาดเท่าที่คิดไว้? ���้ารู้ตั้งแต่แรกๆ จะตัดสินใจเลิกทำเพื่อจำกัดความวอดวายไหม? จะยอมเสียเงินน้อยๆแทนที่จะพยายามลากไปแล้วเสียมากๆตอนจบไหม?&lt;/p&gt;

&lt;p&gt;กลับกันมันอาจจะติดตลาดกว่าที่เราคิดก็ได้ ของอยู่ๆ จะเป็น viral มักจะไม่มีสัญญาณเตือนเราด้วย วันนึงยอดคนใช้ก็พุ่งปรี๊ดขึ้นมา ฮิตติดตลาดไลค์เป็นแสน ทวีตเป็นล้าน ถึงวันนั้น เราอยากจะโยกคนมาโปรเจคนี้มากขึ้นไหม? เราอยากทุ่มพลังเพื่อสร้างกำไรมากขึ้นหรือเปล่า?&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.varokas.com/images/2014/08/SEO_keyword_analysis_list.jpg&#34;&gt;&lt;img src=&#34;http://www.varokas.com/images/2014/08/SEO_keyword_analysis_list.jpg&#34; alt=&#34;Data Driven or Luck Driven? (รูปจาก: http://www.askingsmarterquestions.com/data-driven-marketing-steps-for-seo-keyword-analysis/)&#34; /&gt;
&lt;/a&gt; Data Driven or Luck Driven?&lt;br /&gt;
(รูปจาก: &lt;a href=&#34;http://www.askingsmarterquestions.com/data-driven-marketing-steps-for-seo-keyword-analysis/&#34;&gt;http://www.askingsmarterquestions.com/data-driven-marketing-steps-for-seo-keyword-analysis/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;คำถามเหล่านี้คงไม่สามารถตอบกันได้ง่ายๆ ซึ่งอไจล์ไม่ได้ช่วยให้ปัญหาสองอย่างนี้หมดไป&lt;/p&gt;

&lt;p&gt;แต่อไจล์ช่วยได้อย่างชัดเจนคือ สร้างข้อมูลผ่านของที่ใช้งานจริง เพื่อประกอบการตัดสินใจได้ว่า ของมันขายได้หรือไม่ได้ ทำแล้วมีผลดีจริงหรือไม่จริง ข้อมูลการตัดสินใจเกิดจากข้อมูลที่สร้างขึ้นเองในวันนี้ ทำให้มั่นใจกว่าประมาณการของที่ยังไม่มีอะไรให้ลองดูนอกจากเอกสารดีไซน์เปล่าๆ&lt;/p&gt;

&lt;p&gt;และของแถมคือ วันที่คุณตัดสินใจเลิกทำโปรเจคอะไร วันนั้นก็มีของที่ใช้งานได้ มีคุณค่า เท่ากับวันที่ &amp;ldquo;ตัดจบ&amp;rdquo; นั่นแหละ ไม่ได้เป็นเอกสาร requirement/design มากองๆ ไว้ หรือ โปรแกรมที่เขียนไว้ครึ่งๆ ยังไม่ถูกพิสูจน์ว่ามีคุณค่าจริงหรือเปล่า&lt;/p&gt;

&lt;h2 id=&#34;ส-งบ-อยๆ:0cc3ac35e9888fbedb2f67e45e572096&#34;&gt;ส่งบ่อยๆ&lt;/h2&gt;

&lt;p&gt;ทั้งหมดนี้ถ้าจะสรุปง่ายๆ มันคือ ประโยชน์ที่เกิดจากการส่งมอบของที่เกิดคุณค่าได้บ่อยๆ แทนที่จะกั๊กไว้ปล่อยทีเดียวเท่านั้นเองครับ อธิบายในแง่ของการเงิน ความเสี่ยง และการบริหารโปรเจค เข้าใกล้โลกของการเงินหน่อย แทนที่จะอยู่ในมุมของโปรแกรมเมอร์อย่างเดียว&lt;/p&gt;

&lt;p&gt;เท่านี้ CFO ก็ยิ้มได้แล้วครับ&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>พื้นฐานคำนวณราคาหุ้น : Discounted Value</title>
      <link>http://www.varokas.com/post/pricing-discount-value/</link>
      <pubDate>Sat, 26 Jul 2014 02:19:01 +0000</pubDate>
      
      <guid>http://www.varokas.com/post/pricing-discount-value/</guid>
      <description>

&lt;p&gt;จะเลือกซื้อหุ้นแบบ value มันก็เหมือนเลือกซื้อของทั่วไป ต้องทำสองอย่าง&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;ซื้อของดี&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;ซื้อที่ราคาถูก&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;ของดีดูยังไง ดูตามหลักการที่โพสไว้ในนี้ได้ (&lt;a href=&#34;http://www.varokas.com/%E0%B9%80%E0%B8%A5%E0%B8%B7%E0%B8%AD%E0%B8%81%E0%B8%AB%E0%B8%B8%E0%B9%89%E0%B8%99%E0%B8%94%E0%B8%B5%E0%B8%A2%E0%B8%B1%E0%B8%87%E0%B9%84%E0%B8%87/&#34;&gt;เลือกหุ้นดียังไง&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;ส่วนเลือกซื้อของถูกเป็นเรื่องที่ต้องคุยกันยาวหน่อย จะแบ่งเป็นท่อนๆ ตามความเข้าใจตอนนี้ละกัน ใจเย็นๆ เพราะมันต้องอาศัยหลายอย่างประกอบกัน ถึงจะวิเคราะห์มูลค่าของหุ้นได้&lt;/p&gt;

&lt;p&gt;เรื่องแรกเลยที่ต้องเข้าใจคือ ค่าเงินลดเมื่อเวลาผ่านไป หรือ ภาษาอังกฤษเรียกว่า Discounted Value&lt;/p&gt;

&lt;h2 id=&#34;ม-ลค-าเง-นเปล-ยนเม-อเวลาเปล-ยน:0746b7652025532770c1fb13c4e8a885&#34;&gt;มูลค่าเงินเปลี่ยนเมื่อเวลาเปลี่ยน&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://www.varokas.com/power-of-compound-interest&#34;&gt;โพสก่อนหน้านี้&lt;/a&gt; เป็นเรื่องของดอกเบื้ยทบต้นที่พยายามจะบอกว่า เงินถ้าไม่ได้ทำอะไร โยนทิ้งไว้ในธนาคารมันก็จะได้ดอกเบี้ยทบต้นไปเรื่อยๆ ทบๆกันเป็นมูลค่ามหาศาล&lt;/p&gt;

&lt;p&gt;ถ้าใช้หลักการเดียวกันลองมาเล่นเกมง่ายๆ สมมติมีคนเอาเงินมาให้เรา แต่เลือกจ่ายได้สองแบบ&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;อีก 10 ปีข้างหน้าจะเอาเงินมาให้เราซัก 1000 บาท หรือ&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;ให้เงินวันนี้ แต่ให้แค่ 900 บาท&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;เราจะเอาอันไหน?&lt;/p&gt;

&lt;p&gt;คำตอบคือ ถ้าไม่ร้อนเงิน ก็เอา 900 บาทวันนี้ดีกว่า เพราะถ้าคิดไม่ออกว่าจะทำอะไร ก็เอาเงิน 900 บาทไปโยนใส่ไว้ในธนาคาร คิดอกเบี้ยซัก 3% ต่อปี อีก 10 ปีมันก็มีมูลค่ากลายเป็น 1210 บาท ถือว่าคุ้มกว่ารอตั้งนานแล้วก็ได้เงินมาแค่ 1000 บาทในข้อแรก&lt;/p&gt;

&lt;p&gt;ลองกดเล่นเปลี่ยนค่าดูในกล่องข้างล่างได้ (คลิ๊กที่ตัวเลขแล้วเล่นดู)&lt;/p&gt;

&lt;p&gt;&lt;iframe style=&#34;border:0&#34; width=&#34;100%&#34; height=&#34;400&#34; src=&#34;http://pastemath.varokas.com/?t=Compound&amp;#43;Interest&amp;amp;e=FV&amp;#43;%3D&amp;#43;P*%281&amp;#43;%2B&amp;#43;r%29%5En&amp;amp;p=P%2C900%2Cinitial&amp;#43;amount%0Ar%2C0.03%2Cannual&amp;#43;interest&amp;#43;rate%0An%2C10%2Cnumber&amp;#43;of&amp;#43;years&amp;amp;r=FV%2Cfuture&amp;#43;value&#34;&gt;&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2 id=&#34;ม-ลค-าป-จจ-บ-น:0746b7652025532770c1fb13c4e8a885&#34;&gt;มูลค่าปัจจุบัน&lt;/h2&gt;

&lt;p&gt;จากสูตรเดียวกันเราก็เปลี่ยนกลับมาเป็นหา &amp;ldquo;มูลค่าในปัจจุบัน&amp;rdquo; จาก &amp;ldquo;เงินที่จะได้รับในอนาคต&amp;rdquo; ได้ด้วยการแปลงจากการคูณดอกเบี้ยทบต้นมาเป็นการหาร (ย้ายข้างสมการธรรมดา) แทนที่จะไปเทียบมูลค่าในอีกสิบปีข้างหน้า ก็กลับมาเทียบมูลค่าในปัจจุบันแทน&lt;/p&gt;

&lt;p&gt;จากด้านบนก็จะพบได้ว่า เงิน 1000 บาทในอนาคต มีมูลค่าในวันนี้ 744 บาทเท่านั้น ถ้่าอัตราดอกเบี้ยเงินฝาก 3%&lt;/p&gt;

&lt;p&gt;คิดแบบนี้ก็จะพบว่ามีแบบที่หนึ่งมี &amp;ldquo;มูลค่าในปัจจุบัน&amp;rdquo; น้อยกว่าแบบที่สอง&lt;/p&gt;

&lt;p&gt;&lt;iframe style=&#34;border:0&#34; width=&#34;100%&#34; height=&#34;450&#34; src=&#34;http://pastemath.varokas.com/?t=Discounted&amp;#43;Value&amp;amp;e=DV&amp;#43;%3D&amp;#43;FV%2F%281&amp;#43;%2B&amp;#43;r%29%5En&amp;amp;p=FV%2C1000%2Cfuture&amp;#43;value%0Ar%2C0.03%2Cannual&amp;#43;interest&amp;#43;rate%0An%2C10%2Cnumber&amp;#43;of&amp;#43;years&amp;amp;r=DV%2Cdiscounted&amp;#43;value&#34;&gt;&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2 id=&#34;สำค-ญย-งไง:0746b7652025532770c1fb13c4e8a885&#34;&gt;สำคัญยังไง?&lt;/h2&gt;

&lt;p&gt;เรื่อง discounted value สำคัญมากเพราะพื้นฐานการคำนวณราคาหุ้นหรือของอะไรก็ตาม มาจากผลประโยชน์ที่เราจะได้รับในอนาคตทั้งนั้น เราจะต้องตีกลับมาให้ได้ว่ามูลค่าปัจจุบันมันคืออะไร จะได้เอามาเปรียบเทียบได้ถูก&lt;/p&gt;

&lt;p&gt;ส่วนมันจะมีอะไรที่มีมูลค่าบ้าง ไว้ค่อยมาดูกัน&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>ฟอนต์นานาชาติฟรีจาก Google</title>
      <link>http://www.varokas.com/post/free-font-google/</link>
      <pubDate>Sat, 26 Jul 2014 01:34:10 +0000</pubDate>
      
      <guid>http://www.varokas.com/post/free-font-google/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://www.varokas.com/images/2014/07/Screen-Shot-2014-07-25-at-6.13.41-PM.png&#34;&gt;&lt;img src=&#34;http://www.varokas.com/images/2014/07/Screen-Shot-2014-07-25-at-6.13.41-PM-1024x616.png&#34; alt=&#34;Screen Shot 2014-07-25 at 6.13.41 PM&#34; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Google ใจดีแจกของอีกแล้ว คราวนี้เป็นฟอนต์ที่ตามเพจเค้าบอกว่าทำให้ฟอนต์มันไปทางเดียวกันทั้งโลก &amp;ldquo;achieve visual harmonization across languages&amp;rdquo; ที่แปะไม่ใช่อะไร จะ bookmark ไว้วันหลังจะได้กลับมาโหลดได้&lt;/p&gt;

&lt;p&gt;แนะนำให้โหลดเฉพาะภาษาที่ตัวเองต้องการ เอามาทั้งหมดมันเยอะเกิน&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.google.com/get/noto/#/family/noto-sans-thai&#34;&gt;Goto Noto Fonts&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Translate JS Math into Latex</title>
      <link>http://www.varokas.com/post/translate-js-math-into-latex/</link>
      <pubDate>Tue, 22 Jul 2014 03:14:27 +0000</pubDate>
      
      <guid>http://www.varokas.com/post/translate-js-math-into-latex/</guid>
      <description>&lt;p&gt;While working on &lt;a href=&#34;http://pastemath.varokas.com&#34;&gt;Pastemath&lt;/a&gt;, I stumbled upon the &lt;a href=&#34;http://mathjs.org/&#34;&gt;math.js&lt;/a&gt; library.&lt;/p&gt;

&lt;p&gt;Not only that we can use it to evaluate your math, changing simple js math into Latex is of the more useful feature. Especially when no one actually remembers the whole LaTex syntax after college.&lt;/p&gt;

&lt;p&gt;This would really be useful when blogging about investing and stuff.&lt;/p&gt;

&lt;p&gt;&lt;iframe style=&#34;border:0&#34; width=&#34;100%&#34; height=&#34;350&#34; src=&#34;http://jsfiddle.net/varokas/x5XuS/1/embedded/result,html,js&#34;&gt;&lt;/iframe&gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>พลังของดอกเบี้ยทบต้น</title>
      <link>http://www.varokas.com/post/power-of-compound-interest/</link>
      <pubDate>Mon, 21 Jul 2014 02:07:12 +0000</pubDate>
      
      <guid>http://www.varokas.com/post/power-of-compound-interest/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;http://www.bellanaija.com/wp-content/uploads/2012/06/Fundraising.jpg&#34; alt=&#34;&#34; /&gt;
 ที่มารูป: &lt;a href=&#34;http://www.bellanaija.com/2012/06/22/on-becoming-a-man-the-fundraisers-diary-part-ii/picking-from-the-money-tree/&#34;&gt;http://www.bellanaija.com/2012/06/22/on-becoming-a-man-the-fundraisers-diary-part-ii/picking-from-the-money-tree/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;ทุกคนที่เริ่มลงทุน บทเรียนแรกคือการเข้าใจก่อนว่า ถ้าอยากจะเก็บเงินใช้ ต้องมีการบริหารจัดการให้มันได้ผลตอบแทนงอกขึ้นมาด้วย&lt;/p&gt;

&lt;p&gt;ต้องรู้ว่าเงินถ้าไม่ได้ทิ้งไว้เฉยๆ แล้วเอาไปทำให้เกิดดอกผลขึ้นมา ถึงจะมีดอกเบี้ยกระจิดริดแค่ไหน ถ้าอาศัยเวลาและพลังแห่งดอกเบี้ยทบต้นมันจะกลายเป็นเงินจำนวนมหาศาล&lt;/p&gt;

&lt;p&gt;เพราะฉะนั้นถ้าอยากมีเงินเก็บไว้ใช้เยอะๆไม่จำเป็นต้องมีเยอะ แต่อาศัยเก็บตั้งแต่เด็กแล้วปล่อยทิ้งไว้ยาวๆ&lt;/p&gt;

&lt;p&gt;คิดง่ายๆ สมมติมีเงินอยู่ 10,000 บาท เอาไปโยนใส่ธนาคารฝากประจำไว้ ได้ดอกเบี้ยนิดหน่อยแค่ 4% ต่อปี ผ่านไป 20 ปี มันก็มีค่ากลายเป็น 20,000 ทันที โดยไม่ต้องทำอะไรและแทบไม่เสี่ยงอะไรเลยด้วย นี่คือ ได้มาสองเท่าแบบขี้เกียจๆไม่ต้องคิดอะไรเลย&lt;/p&gt;

&lt;p&gt;ลองไปกดๆ แก้ๆ ตามสูตรข้างล่างเล่นดูได้ คำนวณดูว่าเงินของเราจะเป็นยังไงในอีกสิบยี่สิบปีข้างหน้า&lt;/p&gt;

&lt;p&gt;&lt;iframe style=&#34;border:0&#34; width=&#34;100%&#34; height=&#34;400&#34; src=&#34;http://pastemath.varokas.com/?t=Compound&amp;#43;Interest&amp;amp;e=FV&amp;#43;%3D&amp;#43;P%2A%281&amp;#43;%2B&amp;#43;r%29%5En&amp;amp;p=P%2C1000%2Cinitial&amp;#43;amount%0Ar%2C0.04%2Cannual&amp;#43;interest&amp;#43;rate%0An%2C20%2Cnumber&amp;#43;of&amp;#43;years&amp;amp;r=FV%2Cfuture&amp;#43;value&#34;&gt;&lt;/iframe&gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>เลือกหุ้นดียังไง</title>
      <link>http://www.varokas.com/post/stock-choosing/</link>
      <pubDate>Thu, 03 Jul 2014 03:07:44 +0000</pubDate>
      
      <guid>http://www.varokas.com/post/stock-choosing/</guid>
      <description>

&lt;p&gt;คนไหนกำลังลงทุนแบบ Value อยู่ แนะนำให้ดู 19 คลิปนี้ใน playlist นี้นะครับ อธิบายไว้ค่อนข้างดีมากเลย แต่อาจจะมีมุกไม่เกี่ยวเยอะหน่อย ใครไม่อยากซื้อหุ้น ดูแล้วอาจจะอยากซื้อขึ้นมาก็ได้ ผมยังดูไม่จบ แต่อยากจะ Blog ข้อมูลสำคัญไว้ก่อน เผื่อกลับมาอ่านได้&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;videoWrapper&#34;&gt;
&lt;iframe type=&#34;text/html&#34; frameborder=&#34;0&#34; width=&#34;100%&#34; src=&#34;https://www.youtube.com/embed/videoseries?list=PLXylIzHOm7Yostmj6302AAuQ9kdogYrIM&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;

&lt;h3 id=&#34;การลงท-นแบบ-value:db7a2ae981e9e1a9e843975dd45201d5&#34;&gt;การลงทุนแบบ Value&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;ซื้อหุ้นดี&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;ซื้อหุ้นถูก&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;ถือให้ยาว&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;กระจายความเสี่ยง&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;เริ่มจากการหาหุ้นดีก่อน&lt;/p&gt;

&lt;h3 id=&#34;การเล-อกบร-ษ-ทด:db7a2ae981e9e1a9e843975dd45201d5&#34;&gt;การเลือกบริษัทดี&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;1. เติบโตสม่ำเสมอ&lt;/strong&gt;
ดู Earning per Share&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. อำนาจต่อรองสูง&lt;/strong&gt;
คือลูกค้าต่อรองราคาไม่ได้ ดู Gross profit margin = กำไรขั้นต้น / รายได้&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. เป็นผู้นำทางธุรกิจ&lt;/strong&gt;
ดู ค่าใช้จ่ายในการดำเนินงาน / รายได้&lt;/p&gt;

&lt;p&gt;เพราะค่าใช้จ่ายดำเนินงานส่วนมากเป็นค่าโฆษณา ถ้าบริษัทดีไม่ต้องโฒษณาเยอะ ค่าใช้จ่ายตรงนี้จะต่ำลงเรื่อยๆ&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. ฐานะการเงินดี&lt;/strong&gt;
ไม่มีหนี้ หรือ หนี้น้อย ให้ดู หนี้สินที่มีภาระดอกเบี้ย / ส่วนผู้ถือหุ้น&lt;/p&gt;

&lt;p&gt;สำคัญเพราะถึงบริษัทดี แต่ถ้ามีหนี้เยอะ จะผ่านวิกฤตเศรษฐกิจได้ยาก&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5. ทำกำไรเก่ง&lt;/strong&gt;
ดู​ กำไรสุทธิ / ส่วนผู้ถือหุ้น&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;6. ผู้บริหารเก่งและเป็นคนดีไม่โกงผู้ถือหุ้น&lt;/strong&gt;
อันนี้ถ้าผ่านข้างบนมาได้ ผู้บริหารคงต้องเก่ง เป็นคนดีนี่ไม่รู้ดูตัวเลขอะไรได้&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Async Testing บน JavaScript</title>
      <link>http://www.varokas.com/post/async-testing-e0b89ae0b899-javascript/</link>
      <pubDate>Sat, 28 Jun 2014 22:43:23 +0000</pubDate>
      
      <guid>http://www.varokas.com/post/async-testing-e0b89ae0b899-javascript/</guid>
      <description>&lt;p&gt;ใช้ Asynchronous โค้ดมักจะเทสได้ยาก เพราะเราไม่รู้ว่ามันจะไปจบลงเมื่อไหร่ เพราะเวลาเราเรียกฟังก์ชัน async เสร็จมันก็จะไปอยู่ในโลกของมันเอง ไม่กลับมาอีก&lt;/p&gt;

&lt;p&gt;ซึ่งเทคนิคในการแก้ไขแบบนี้น่าจะมีได้หลายแบบ อย่างนึงที่คิดออกและเคยทำคือ ต้องให้ async code มันไปเขียนค่าใน shared variable ซักตัวนึง แล้วก็ให้เทสมันเช็คหลังจากรอไปซักพักนึง&lt;/p&gt;

&lt;p&gt;แต่สำหรับ JavaScript ถ้าใครใช้ jasmine เป็นเฟรมเวิร์คในการเทส จะมีวิธีจัดการง่ายๆ แบบนี้&lt;/p&gt;

&lt;p&gt;[code lang=&amp;ldquo;js&amp;rdquo;]
it(&amp;ldquo;async spec must use done callback&amp;rdquo;, function(done) {
  setTimeout(function() {
    done();
  }
  ,50);
});
[/code]&lt;/p&gt;

&lt;p&gt;ลองสังเกตว่าถ้าเราเขียนเทสปกติ function ที่อยู่ใน it(..) จะไม่รับ parameter อะไร แต่ถ้าเป็นแบบ async ก็จะมีการประกาศตัวแปรขึ้นมา 1 ตัว (ไม่ให้งงแนะนำว่าให้ใช้ชื่อว่า done) ซึ่งถ้าประกาศแบบนี้แล้ว jasmine ก็จะรู้เองว่าเราอยากใช้แบบ async ซึ่งจะผ่านเมื่อในโค้ดเรามีการเรียก done ก่อนเวลา timeout (ค่า default คือ 5 วินาที เปลี่ยนได้)&lt;/p&gt;

&lt;p&gt;ลองไปรันโค้ดได้จากที่นี่ : [&lt;a href=&#34;https://github.com/varokas/kata-js&#34;&gt;https://github.com/varokas/kata-js&lt;/a&gt;]&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>